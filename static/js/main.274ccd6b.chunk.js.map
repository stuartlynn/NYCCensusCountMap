{"version":3,"sources":["components/RangeLegend.js","components/CategoryLegend.js","components/BoundarySelector.js","components/FacilitiesSelector.js","components/HelpTab.js","components/InfoTab.js","hooks/useCCFs.js","components/CCFSearch.js","components/OutreachAssetSelector.js","icons/laundry_484949.svg","icons/laundry_A44098_alert.svg","icons/laundry_A44098.svg","components/OutreachTab.js","components/Legend.js","colors.js","components/PieCard.js","components/FactCard.js","components/AssetCategoryCard.js","components/DetailsSelector.js","components/ProgressBar.js","components/LanguageCard.js","components/Details.js","hooks/useFacilities.js","Layers.js","hooks/useFacilitiesLayer.js","hooks/useOutreachLayers.js","components/PDFDoc.js","components/PrintDialog.js","components/CCFDetails.js","pages/MainPage.js","hooks/useCCFAssignments.js","hooks/useOutreachTargets.js","hooks/useMap.js","hooks/useGeoJSONLayer.js","hooks/useBoundaryLayers.js","App.js","serviceWorker.js","index.js"],"names":["RangeLegend","name","min","max","colStart","colEnd","gradient","console","log","className","style","background","CategoryLegend","categories","map","category","key","backgroundColor","color","sub","BoundarySelector","boundaries","selectedBoundary","onSelect","options","Object","entries","value","label","datasetName","onChange","a","placeholder","FacilitiesSection","title","selected","useState","expanded","setExpanded","selectedInThisCategory","filter","o","includes","allSelected","length","onClick","icon","faAngleDown","faAngleRight","type","checked","e","selectAll","target","option","FacilitiesSelector","onSelected","section","HelpTab","href","src","classNmae","useCCFs","CCFs","setCCFs","useEffect","Papa","parse","process","download","header","complete","results","data","d","address","latitude","longitude","CCFSearch","find","search","OutreachAssetsSection","layer","OutreachAssetsSelector","_extends","assign","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","fill","transform","id","_ref","svgRef","props","viewBox","ref","ForwardRef","forwardRef","_ref4","ry","rx","cy","cx","OutreactTab","selectedCCF","onSelectedCCF","selectedOutreachTypes","onSelectOutreachTypes","display","justifyContent","alignItems","width","height","textAlign","fontWeight","Legend","onSelectBoundary","showFacilities","onShowFacilitiesChange","tab","onTabChanged","onSelectMetric","metric","selectedFacilityTypes","onSelectFacilityType","onPrint","shareURL","showENRFU","onToggleENRFU","faLayerGroup","faExclamationCircle","faInfoCircle","faQuestionCircle","text","window","location","marginTop","colors","renderCustomizedLabel","midAngle","innerRadius","outerRadius","percent","radius","index","x","Math","cos","RADIAN","y","sin","textAnchor","dominantBaseline","toFixed","PI","PieCard","colData","labelLine","isAnimationActive","entry","FactCard","facts","fact","toLocaleString","AssetCategoryCard","assets","ceil","asset","boro","city","zipcode","join","DetailsSelector","isSelected","ProgressBar","pc","LanguageCard","sorted_data","sort","b","slice","floor","Details","feature","facilities","onSelectFacility","tract","facilityTypes","showBoundaryData","setShowBoundaryData","selectedDetails","setSelectedDetails","filteredFacilities","types","layerIDs","cd","tracts","cc","sd","nta","police_precincts","congress_districts","senate_districts","NOCCs","useMemo","features","facility","properties","asset_type","f","useFilteredFacilities","geoid","GEOID","featureName","nat","state_assembly_districts","displayFeature","downloadAssets","useCallback","csv","blob","Blob","boundaryType","boundaryId","saveAs","Fragment","nocc_id","neighborhood","total_population","htc_pop","MRR2010","strategy_code","contactStrategy","faDownload","detail","CRRALL","HISTORIC_RESP_RATE","english_asian","english_spanish","english_european","english_other","makeEnglishData","norm","bilingual","english_total_households","english_english","col","makeLanguage","race_white","race_total","race_black","race_asian","race_hispanic","race_other","makeDemographicData","foreign_born_native","foreign_born_foreign","makeForeignData","age_less_5","age_6_15","age_16_64","age_64_over","makeAgeData","internet_no_access","internet_subscription","internet_no_subscription","makeInternetData","own_vs_rent_rent","own_vs_rent_owner","makeRenting","fillStyles","responseRate","strategy","blackPop","asianPop","latinxPop","whitePop","otherPop","noInternetPC","englishProficency","under5","returnCount","HTCLayer","url","paintFill","paintLine","EarlyNRFU","BoundaryLayers","polygons","labels","nameCol","nameAlt","useFacilitiesLayer","visible","selectedTypes","reduce","set","add","Set","current","on","Promise","all","img","resolve","reject","loadImage","error","res","addImage","loadAllImages","then","forEach","addLayer","layout","visibility","paint","setVisibility","shouldBeVisable","loaded","setLayoutProperty","setTimeout","name_fields","autorepairshops_nyc_geocoded","bank_owned_atmlocations_nyc_geocodio","bodegas_grocers_nyc","chain_grocerystores_nyc_geocoded","doe_schools_nyc","dohmh_farmers_markets","foodkitchens_nyc","homelessshelters_nyc","hospitalsandhealthclinics_nyc","liquor_winestores_nyc_geocoded","nyc_gas_station_locations_geoclient_enriched","post_offices","seniorservices_nyc_geocoded","laundromats_nyc","type_map","generateICON","claimedBy","pending","styles","StyleSheet","create","page","flexDirection","margin","padding","flexGrow","PDFDoc","mapImage","mapImageRatio","innerHeight","innerWidth","orientation","size","debugg","PrintDialog","onClose","flex","CCFDetails","boxSizing","MainPage","mapDiv","useRef","setSelectedBoundary","selectedTract","setSelectedTract","selectedFeature","setSelectedFeature","setHardToCountStats","setSelectedCCF","popupFeature","setPopupFeature","setSelectedFacilityTypes","setSelectedOutreachTypes","setMetric","setShowNRFU","showPrintDialog","setShowPrintDialog","showOutreach","setShowOutreach","setShowFacilities","setMapImage","setTab","mapping","setMappings","useCCFAssignments","outreachTargets","targets","setTargets","targetTableList","t","fetch","r","json","all_features","reducedTargets","useOutreachTargets","ReactGA","initialize","pageview","pathname","mapDivRef","lnglat","zoom","mapboxgl","accessToken","popup","spriteURL","Map","container","sprite","center","preserveDrawingBuffer","addControl","MapboxGeocoder","ScaleControl","NavigationControl","Popup","offset","setLngLat","coordinates","setHTML","unique_id","addTo","remove","zoomToBounds","bounds","fitBounds","useMap","params","queryString","nrfu","boundaryID","zoomToFeature","isStyleLoaded","getLayer","querySourceFeatures","sf","turf","units","searchBox","Layers","setTractIfActive","boundaryLayers","sourceLayer","selection","fillLayer","lineLayer","source_name","oldSelectionID","metricChangeTimeout","visibilityChangeTimeout","addSource","setFeatureState","clearTimeout","setPaint","setPaintProperty","useGeoJSONLayer","selectedLayer","selectedVar","onSelectLayer","selectedGeomID","layers","setLayers","boundaryLayerChangeTimeout","layerList","sourceName","layerDeets","sourceLabels","labelLayer","updateVisibility","useBoundaryLayers","boundary","setFacilities","useFacilities","outreachTragets","geometry","useOutreachLayers","origin","newList","imageURL","document","getElementsByClassName","toDataURL","App","basename","path","component","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.274ccd6b.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function RangeLegend({name, min, max, colStart, colEnd}) {\n  const gradient = `linear-gradient(90deg, ${colStart} 0%, ${colEnd} 100%)`;\n\n  console.log('gradient is ', gradient);\n  return (\n    <div className=\"range-legend\">\n      <div\n        className=\"range-legend-bar\"\n        style={{\n          background: gradient,\n        }}\n      />\n      <div className=\"range-legend-labels\">\n        <p>{min}</p> <p>{max}</p>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function CategoryLegend({ categories }) {\n    return (\n        <section className=\"category-layer\">\n            <ul>\n                {categories.map(category => (\n                    <li key={category.name} className=\"category-entry\">\n                        <div\n                            className=\"category-marker\"\n                            style={{ backgroundColor: category.color }}\n                        />\n                        <div className=\"category-name\">\n                            {category.name}\n                            {category.sub && (\n                                <p className=\"category-sub\">{category.sub}</p>\n                            )}\n                        </div>\n                    </li>\n                ))}\n            </ul>\n        </section>\n    );\n}\n","import React from 'react';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n\nexport default function BoundarySelector({\n  boundaries,\n  selectedBoundary,\n  onSelect,\n}) {\n  const options = Object.entries(boundaries).map(([id, layer]) => ({\n    value: id,\n    label: layer.datasetName,\n  }));\n  return (\n    <section className=\"boundary-selector\">\n      <h3>Boundaries</h3>\n\n      {boundaries && (\n        <Dropdown\n          options={[{value: 'tracts', label: 'Census Tracts'}, ...options]}\n          onChange={a => onSelect(a.value)}\n          value={selectedBoundary}\n          placeholder=\"Select a boundary\"\n        />\n      )}\n    </section>\n  );\n}\n","import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleRight, faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction FacilitiesSection({ title, options, selected, onSelect }) {\n    const [expanded, setExpanded] = useState(false);\n    const selectedInThisCategory = options.filter(o => selected.includes(o));\n    const allSelected = selectedInThisCategory.length === options.length;\n\n    const onSelectAll = selectAll => {\n        if (selectAll) {\n            onSelect(options.filter(o => !selected.includes(o)));\n        } else {\n            onSelect(options.filter(o => selected.includes(o)));\n        }\n    };\n    return (\n        <section>\n            <div className=\"facilities-section-header\">\n                <FontAwesomeIcon\n                    onClick={() => setExpanded(!expanded)}\n                    icon={expanded ? faAngleDown : faAngleRight}\n                />{\" \"}\n                <input\n                    type=\"checkbox\"\n                    checked={allSelected}\n                    onChange={e => onSelectAll(e.target.checked)}\n                />\n                <h4 onClick={() => setExpanded(!expanded)}>\n                    {title} ({selectedInThisCategory.length}/{options.length})\n                </h4>\n            </div>\n            {expanded && (\n                <ul>\n                    {options.map(option => (\n                        <li key={option} className=\"facilities-option\">\n                            <input\n                                type=\"checkbox\"\n                                checked={selected.includes(option)}\n                                onChange={() => onSelect([option])}\n                            />\n                            {option}\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </section>\n    );\n}\n\nexport default function FacilitiesSelector({ selected, onSelected }) {\n    const sections = [\n        {\n            title: \"Educational Assets\",\n            options: [\n                \"Head Start and Early Head Start\",\n                \"Universal Pre-K\",\n                \"K-12 (NYC Public Schools)\",\n                \"Community Schools\",\n                \"Public Libraries\"\n            ]\n        },\n\n        {\n            title: \"Services and Programs\",\n            options: [\n                \"Shelters\",\n                \"Food Kitchens and Pantries\",\n                \"Senior Centers\",\n                \"Mental Health Services\",\n                \"Hospitals and Rehab Centers\",\n                \"LGBTQ Centers and Services\",\n                \"NYCHA Developments\"\n            ]\n        },\n\n        {\n            title: \"Neighborhood Institutions\",\n            options: [\n                \"Community-Based Organizations\",\n                \"Faith-Based Organizations\",\n                \"Community Centers and YMCA's\"\n            ]\n        }\n    ];\n    const [expanded, setExpanded] = useState({\n        \"Education Assets\": false\n    });\n    return (\n        <div className=\"facilities-selector\">\n            <h3>Community Assets</h3>\n            {sections.map(section => (\n                <FacilitiesSection\n                    key={section.title}\n                    title={section.title}\n                    options={section.options}\n                    selected={selected}\n                    onSelect={option => onSelected(option)}\n                />\n            ))}\n        </div>\n    );\n}\n","import React from \"react\";\n\nexport default function HelpTab() {\n    return (\n        <div className=\"help-tab\">\n            <section>\n                <h3>ABOUT</h3>\n\n                <p>\n                    This interactive map was created by{\" \"}\n                    <a href=\"https://hesterstreet.org/\" target=\"_blank\">\n                        Hester Street\n                    </a>{\" \"}\n                    in partnership with{\" \"}\n                    <a href=\"http://stuartlynn.me/\">Stuart Lynn</a>. Hester\n                    Street is an urban planning, design and development\n                    nonprofit that works to ensure neighborhoods are shaped by\n                    the people who live in them.\n                </p>\n                <p>\n                    This work was made possible with the support of the NYC\n                    Census 2020 and CUNY Complete Count Fund.\n                </p>\n                <p>\n                    If you have additional assets, services or neighborhood\n                    institutions to contribute to the map, please email{\" \"}\n                    <a href=\"2020Census@hesterstreet.org\">\n                        2020Census@hesterstreet.org\n                    </a>{\" \"}\n                    with the subject line \"New interactive map assets\". Be sure\n                    to include the following information for each asset\n                </p>\n                <ul className=\"dashed\">\n                    <li>Name </li>\n                    <li>Address</li>\n                    <li>Layer it should be added to</li>\n                </ul>\n                <img src=\"imgs/HS_Logo_Blk_RGB.png\" />\n            </section>\n        </div>\n    );\n}\n","import React from \"react\";\n\nexport default function HelpTab() {\n    return (\n        <div className=\"help-tab\">\n            <section>\n                <h3>INFORMATION</h3>\n                <h3>Context Layers</h3>\n                <p>\n                    The base context layers for the map are supplied by\n                    OpenStreetMap>\n                </p>\n            </section>\n            <section>\n                <h3>Asset Layers</h3>\n                <h4>Educational Assets </h4>\n\n                <p>\n                    These layers identify the location of educational\n                    facilities. Children are a historically undercounted\n                    community; it will be important to reach parents at Head\n                    Start, Early Head Start, Universal Pre-K, K-12 (NYC Public\n                    Schools), and Community Schools. Other assets include public\n                    libraries, which can be hubs for engaging the wider\n                    community. These layers do not include a comprehensive list\n                    of charter, parochial, or private schools.\n                </p>\n                <p className=\"source\">\n                    Sources:{\" \"}\n                    <a\n                        target=\"_blank\"\n                        href=\"https://data.cityofnewyork.us/City-Government/Facilities-Database-Shapefile/2fpa-bnsx\"\n                    >\n                        Department of City Planning. (2019). City Planning\n                        Facilities Database.\n                    </a>\n                </p>\n\n                <h4>Services and Programs</h4>\n\n                <p>\n                    These layers identify various locations where New Yorkers\n                    access services, assistance or programs. The assets in this\n                    list can help you engage a range of historically\n                    undercounted communities, like low-income individuals,\n                    people experiencing homelessness, people that live with\n                    mental or physical disabilities, people who do not live in\n                    traditional housing and LGBTQ individuals. These layers do\n                    not include all services and programs serving these\n                    populations. If we are missing any important services in\n                    your community, please let us know by emailing{\" \"}\n                    <a\n                        target=\"_blank\"\n                        href=\"mainto:2020Census@hesterstreet.org\"\n                    >\n                        2020Census@hesterstreet.org\n                    </a>\n                </p>\n                <p className=\"sources\">\n                    Sources:{\" \"}\n                    <a\n                        target=\"_blank\"\n                        href=\"https://data.cityofnewyork.us/City-Government/Facilities-Database-Shapefile/2fpa-bnsx\"\n                    >\n                        Department of City Planning. (2019). City Planning\n                        Facilities Database\n                    </a>\n                    .\n                    <a\n                        target=\"_blank\"\n                        href=\"https://gaycenter.org/recovery-health/health/lgbthealth-network/#networkmembers\"\n                    >\n                        The Lesbian, Gay, Bisexual and Transgender Community\n                        Center. (2019). LGBTQ Health and Human Services Network\n                        Members.\n                    </a>\n                    <a\n                        target=\"_blank\"\n                        href=\"https://nycopendata.socrata.com/Health/Mental-Health-Service-Finder-Data/8nqg-ia7v\n\"\n                    >\n                        Office of the Mayor. (2018). NYC Mental Health Service\n                        Finder Data.\n                    </a>\n                </p>\n\n                <h4>Neighborhood Institutions</h4>\n                <p>\n                    These layers identify institutions where residents gather,\n                    like faith-based organizations, community centers and\n                    community-based organizations. These neighborhood\n                    institutions can become your partners for Census efforts.\n                    These layers do not include a comprehensive list of all\n                    institutions serving your neighborhood populations. If we\n                    are missing any important institutions in your community,\n                    please let us know by emailing{\" \"}\n                    <a href=\"mailto:2020Census@hesterstreet.org\">\n                        2020Census@hesterstreet.org\n                    </a>\n                </p>\n\n                <p>\n                    Sources:{\" \"}\n                    <a\n                        target=\"_blank\"\n                        href=\"https://data.cityofnewyork.us/City-Government/Facilities-Database-Shapefile/2fpa-bnsx\"\n                    >\n                        Department of City Planning. (2019). City Planning\n                        Facilities Database.{\" \"}\n                    </a>\n                    United Way of New York City, New York Immigration Coalition,\n                    and Hester Street Partner databases in NYC.\n                </p>\n            </section>\n            <section>\n                <h3>Census 2020 Info Layers</h3>\n\n                <h4>Mail Contact Strategy</h4>\n\n                <p>\n                    This dataset shows how US Census Bureau’s plan to contact\n                    each household in the United States. Understanding your\n                    target areas Mail Contact Strategy will help you spread the\n                    word to your community about how they can self-respond to\n                    the Census. In the case of New York City, the forms of\n                    contact include four methods divided into two categories:\n                    Internet First and Internet Choice.\n                </p>\n\n                <p>\n                    Internet First (marked as purple on the map) are areas that\n                    are more likely to respond first online. These households\n                    will receive an invitation to complete the census online.\n                    Areas marked in dark purple will be sent an invitation in\n                    English, while areas marked in light purple will be sent an\n                    invitation in both English and Spanish.\n                </p>\n\n                <p>\n                    Internet Choice (marked as green on the map) are areas that\n                    are less likely to respond online. These households will\n                    receive a paper questionnaire, along with an invitation to\n                    complete the census online or by phone. Areas marked in dark\n                    green will be sent an invitation in English, while areas\n                    marked in light green will be sent an invitation in both\n                    English and Spanish.\n                </p>\n                <p className=\"sources\">\n                    Source: NYC Census 2020 Early NRFU Early NRFU stands for\n                    “Early Non-Response Follow Up”. Non-Response Follow Up is a\n                    contact method the Census Bureau uses to collect information\n                    for those households who have not self-responded to the\n                    Census. During the NRFU period, Census enumerators will\n                    visit households and administer the questionnaire. “Early\n                    NRFU” areas will receive enumerators on April 9th, so the\n                    Census can capture college and university students who live\n                    in off-campus housing before the end of the spring semester\n                    when they may leave for another residence. Source: NYC\n                    Census 2020 2010 Mail Return Rate The 2010 Mail return rate\n                    is the percentage of households who self-responded to the\n                    Census in 2010. Self-response is the more accurate way for\n                    every New Yorker to be counted, so the return rate allows us\n                    to identify areas that have been undercounted in the past\n                    and are at risk of being undercounted again during the 2020\n                    Census. We call this areas “historically undercounted\n                    communities” or “Hard-to-Count areas”. The NYC Census 2020\n                    Team plans to push the City’s Self-Response rate from 62% to\n                    the national average of 76% or higher. Source:U.S. Census\n                    Bureau. (2012). 2012 Planning Database.\n                </p>\n            </section>\n            <section>\n                <h3>Boundary Layers</h3>\n\n                <p>\n                    New York City has many geographic boundaries; all used by\n                    different groups for different purposes. Depending on your\n                    needs, using a specific boundary can help you better\n                    understand your target population.\n                </p>\n                <p>\n                    We want to note that the “NOCC Neighborhoods” boundary\n                    slightly differs from actual boundaries for the\n                    neighborhoods of NYC. This layer specifically pertains to\n                    NOCC leaders for the NYC Census effort and their defined\n                    neighborhood boundaries.\n                </p>\n                <p className=\"sources\">\n                    Sources: NYC Census 2020 NYC Open Data 2018 US Census Bureau\n                    2018\n                </p>\n            </section>\n            <section>\n                <h3>Demographic Layers</h3>\n                <p>\n                    We included data on the demographics of individuals who are\n                    considered undercounted populations. These layers can help\n                    you better hone in on your target populations. For example,\n                    comparing race to internet access can show where areas of\n                    NYC have no internet in relation to which racial group lies\n                    primarily in those areas).\n                </p>\n\n                <p>\n                    For Internet Access: Limited Internet refers to those with\n                    cellular data plans and Internet access without a\n                    subscription. Internet subscription includes any kind of\n                    broadband access, fiber optic, DSL and/or satellite\n                    subscriptions. Internet Access is an extremely important\n                    dataset because the US Census Bureau is not mailing\n                    questionnaires to 80% of national households, and will be\n                    requesting households to fill out the Census online or over\n                    the phone. You can view where certain areas will and will\n                    not receive paper questionnaires by turning on the Mail\n                    Contact Strategies layers under Important Layers.\n                </p>\n                <p classNmae=\"sources\">\n                    Source: US Census Bureau, American Community Survey 5-Year\n                    Data 2018\n                </p>\n            </section>\n        </div>\n    );\n}\n","import { useState, useEffect } from \"react\";\nimport Papa from 'papaparse'\n\nexport function useCCFs() {\n    const [CCFs, setCCFs] = useState([]);\n    useEffect(() => {\n        Papa.parse(`${process.env.PUBLIC_URL}/CCFAwardees.csv`, {\n            download:true,\n            header:true,\n            complete: function(results) {\n                console.log(\"Outreach CCF names \", results)\n                setCCFs(results.data.map(d => ({\n                    name : d['Org Name'], \n                    address:d['Contact Address w/o Unit'],\n                    latitude: d.latitude,\n                    longitude: d.longitude\n                })));\n            }\n        });\n    }, []);\n\n    return CCFs;\n}\n\nexport function useFilteredCCFs(query) {\n    const ccfs = useCCFs();\n    return ccfs.filter(c => c.name.includes(query));\n}\n","import React from \"react\";\nimport SelectSearch from \"react-select-search\";\nimport \"./selectSearch.css\";\nimport { useCCFs } from \"../hooks/useCCFs\";\n\nexport default function CCFSearch({ selected, onSelected }) {\n    // const options = [\n    //     { name: \"Test1\", value: \"t1\" },\n    //     { name: \"Test2\", value: \"t2\" },\n    //     { name: \"Test3\", value: \"t3\" },\n    //     { name: \"Test4\", value: \"t4\" },\n    //     { name: \"Test5\", value: \"t5\" }\n    // ];\n    const options = useCCFs();\n    return (\n        <div className=\"cff-search\">\n            {options.length > 0  ?\n            \n       \n            <SelectSearch\n                options={options.map(d=> ({name:d.name, value:d.name}))}\n                name=\"CCF\"\n                placeholder=\"Select CCF\"\n                onChange={(option)=>{\n                    onSelected(options.find(o=>o.name===option))\n                }}\n                value={selected ? [selected.name] : []}\n                search\n            />\n            :\n            <h3>Loading</h3>\n            }\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleRight, faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction OutreachAssetsSection({ title, options, selected, onSelect }) {\n    const [expanded, setExpanded] = useState(false);\n    const selectedInThisCategory = options.filter(o => selected.includes(o.layer));\n    const allSelected = selectedInThisCategory.length === options.length;\n\n    const onSelectAll = selectAll => {\n        if (selectAll) {\n            onSelect(options.filter(o => !selected.includes(o.layer)).map(o=>o.layer));\n        } else {\n            onSelect(options.filter(o => selected.includes(o.layer)).map(o=>o.layer));\n        }\n    };\n    return (\n        <section>\n            <div className=\"facilities-section-header\">\n                <FontAwesomeIcon\n                    onClick={() => setExpanded(!expanded)}\n                    icon={expanded ? faAngleDown : faAngleRight}\n                />{\" \"}\n                <input\n                    type=\"checkbox\"\n                    checked={allSelected}\n                    onChange={e => onSelectAll(e.target.checked)}\n                />\n                <h4 onClick={() => setExpanded(!expanded)}>\n                    {title} ({selectedInThisCategory.length}/{options.length})\n                </h4>\n            </div>\n            {expanded && (\n                <ul>\n                    {options.map(option => (\n                        <li key={option.label} className=\"facilities-option\">\n                            <input\n                                type=\"checkbox\"\n                                checked={selected.includes(option.layer)}\n                                onChange={() => onSelect([option.layer])}\n                            />\n                            {option.name}\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </section>\n    );\n}\n\nexport default function OutreachAssetsSelector({ selected, onSelected }) {\n    // const sections = [\n    //     {\n    //         title: \"Financial Institutions\",\n    //         options: [\n    //             \"Head Start and Early Head Start\",\n    //             \"Universal Pre-K\",\n    //             \"K-12 (NYC Public Schools)\",\n    //             \"Community Schools\",\n    //             \"Public Libraries\"\n    //         ]\n    //     },\n\n    //     {\n    //         title: \"Laundromats\",\n    //         options: [\"Laundromats\"]\n    //     },\n\n    //     {\n    //         title: \"Food + Medical Supplies\",\n    //         options: [\n    //             \"Grocery Stores with Senior-only Hours\",\n    //             \"Bodegas / Grocers\",\n    //             \"Farmer's markets\",\n    //             \"Liquor Stores's\"\n    //         ]\n    //     },\n\n    //     {\n    //         title: \"Repair Services\",\n    //         options: [\"Auto Repair Shops\"]\n    //     },\n\n    //     {\n    //         title: \"Social Services\",\n    //         options: [\n    //             \"Child Care Services\",\n    //             \"Homebase Locations\",\n    //             \"Homeless Shelters and congregate care facilities\",\n    //             \"Senior Services\",\n    //             \"Auto Repair Shops\"\n    //         ]\n    //     },\n    //     {\n    //         title: \"Education\",\n    //         options: [\n    //             \"DOE Schools (for free food from 7:30am to 1:30pm everyday)\"\n    //         ]\n    //     },\n\n    //     {\n    //         title: \"Healthcare\",\n    //         options: [\"Hospitals\", \"Pharmacies\"]\n    //     },\n\n    //     {\n    //         title: \"Misc\",\n    //         options: [\"Gas Stations\", \"Post Offices\"]\n    //     }\n    // ];\n\n    const sections = [\n        {\n            title: \"Financial Institutions\",\n            options: [\n                {name:'ATM Locations', layer: \"bank_owned_atmlocations_nyc_geocodio\"}\n            ]\n        },\n\n        {\n            title: \"Laundromats\",\n            options: [{name:\"Laundromats\", layer:'laundromats_nyc'}]\n        },\n\n        {\n            title: \"Food + Medical Supplies\",\n            options: [\n               {name:\"Bodegas / Grocers\", layer:'bodegas_grocers_nyc'},\n               {name:\"Farmer's markets\", layer:'dohmh_farmers_markets'},\n               {name:\"Liquor Stores's\", layer:'liquor_winestores_nyc_geocoded'}\n            ]\n        },\n\n        {\n            title: \"Repair Services\",\n            options: [\n                {name: \"Auto Repair Shops\", layer:\"autorepairshops_nyc_geocoded\"}\n            ]\n        },\n\n        {\n            title: \"Social Services\",\n            options: [\n                {name:\"Homeless Shelters and congregate care facilities\", layer:'homelessshelters_nyc'},\n                {name:\"Senior Services\", layer: 'seniorservices_nyc_geocoded'}\n            ]\n        },\n        {\n            title: \"Education\",\n            options: [\n                {name:\"DOE Schools (for free food from 7:30am to 1:30pm everyday)\", layer:'doe_schools_nyc'}\n            ]\n        },\n\n        {\n            title: \"Healthcare\",\n            options: [\n                {name:\"Hospitals\", layer:'hospitalsandhealthclinics_nyc' }\n            ]\n        },\n\n        {\n            title: \"Misc\",\n            options: [{\n                name: \"Gas Stations\",\n                layer:'nyc_gas_station_locations_geoclient_enriched'\n            },\n                {name:\"Post Offices\", layer:'post_offices'}\n            ]\n        }\n    ];\n    return (\n        <div className=\"facilities-selector\">\n            {sections.map(section => (\n                <OutreachAssetsSection\n                    key={section.title}\n                    title={section.title}\n                    options={section.options}\n                    selected={selected}\n                    onSelect={option => onSelected(option)}\n                />\n            ))}\n        </div>\n    );\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#484949\",\n  d: \"M 36.5,0 A 36.5,36.5 0 0 1 73,36.5 C 73,56.66 36.5,98.57 36.5,98.57 36.5,98.57 0,56.66 0,36.5 A 36.5,36.5 0 0 1 36.5,0 Z\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"scale(0.2 0.2)                    translate(50 45)    \",\n  fill: \"white\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  id: \"Icon_map-laundry-2\",\n  \"data-name\": \"Icon map-laundry-2\",\n  d: \"M53.33,76.49V204.13c0,5.56,4.52,12.34,10.44,12.34H189.42a13.29,13.29,0,0,0,11.44-12.34V76.49Zm73.61,101.3A38.86,38.86,0,1,1,167.1,139,39.49,39.49,0,0,1,127,177.79ZM189.42,38.67H63.77a9.76,9.76,0,0,0-10.44,9h0V68.9H200.86V48.07A10.71,10.71,0,0,0,189.42,38.67ZM102.54,61.26H60.88V46.12h41.66Zm72.29-1A8.44,8.44,0,0,1,166.25,52h0a8.58,8.58,0,1,1,8.85,8.31h-.31Z\"\n}));\n\nvar SvgLaundry484949 = function SvgLaundry484949(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"-10 -15 93 98.57\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLaundry484949, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/laundry_484949.557633ad.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#A44098\",\n  d: \"M 36.5,0 A 36.5,36.5 0 0 1 73,36.5 C 73,56.66 36.5,98.57 36.5,98.57 36.5,98.57 0,56.66 0,36.5 A 36.5,36.5 0 0 1 36.5,0 Z\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"scale(0.2 0.2)                    translate(50 45)    \",\n  fill: \"white\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  id: \"Icon_map-laundry-2\",\n  \"data-name\": \"Icon map-laundry-2\",\n  d: \"M53.33,76.49V204.13c0,5.56,4.52,12.34,10.44,12.34H189.42a13.29,13.29,0,0,0,11.44-12.34V76.49Zm73.61,101.3A38.86,38.86,0,1,1,167.1,139,39.49,39.49,0,0,1,127,177.79ZM189.42,38.67H63.77a9.76,9.76,0,0,0-10.44,9h0V68.9H200.86V48.07A10.71,10.71,0,0,0,189.42,38.67ZM102.54,61.26H60.88V46.12h41.66Zm72.29-1A8.44,8.44,0,0,1,166.25,52h0a8.58,8.58,0,1,1,8.85,8.31h-.31Z\"\n}));\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"translate(-475 -55)\"\n}, /*#__PURE__*/React.createElement(\"ellipse\", {\n  ry: 8.5,\n  rx: 6,\n  cy: 65.629997,\n  cx: 540.28998,\n  className: \"cls-1\",\n  \"data-name\": \"Ellipse 27\",\n  id: \"Ellipse_27\",\n  fill: \"white\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m 553,70.76 a 2.24,2.24 0 0 1 -2,3.37 h -22.45 a 2.27,2.27 0 0 1 -2.26,-2.25 2.32,2.32 0 0 1 0.3,-1.12 l 11.25,-19.5 a 2.24,2.24 0 0 1 3.07,-0.83 2.2,2.2 0 0 1 0.83,0.83 z m -13.2,-4 a 2.16,2.16 0 1 0 2.2,2.12 2.16,2.16 0 0 0 -2.2,-2.12 z m -2,-7.75 0.34,6.38 a 0.57,0.57 0 0 0 0.57,0.53 H 541 a 0.55,0.55 0 0 0 0.56,-0.53 l 0.35,-6.38 a 0.56,0.56 0 0 0 -0.53,-0.59 h -3 a 0.57,0.57 0 0 0 -0.57,0.56 v 0 z\",\n  className: \"cls-3\",\n  fill: \"yellow\",\n  \"data-name\": \"Icon awesome-exclamation-triangle\",\n  id: \"Icon_awesome-exclamation-triangle\"\n}));\n\nvar SvgLaundryA44098Alert = function SvgLaundryA44098Alert(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"-10 -15 93 98.57\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLaundryA44098Alert, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/laundry_A44098_alert.9d18bb14.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#A44098\",\n  d: \"M 36.5,0 A 36.5,36.5 0 0 1 73,36.5 C 73,56.66 36.5,98.57 36.5,98.57 36.5,98.57 0,56.66 0,36.5 A 36.5,36.5 0 0 1 36.5,0 Z\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"scale(0.2 0.2)                    translate(50 45)    \",\n  fill: \"white\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  id: \"Icon_map-laundry-2\",\n  \"data-name\": \"Icon map-laundry-2\",\n  d: \"M53.33,76.49V204.13c0,5.56,4.52,12.34,10.44,12.34H189.42a13.29,13.29,0,0,0,11.44-12.34V76.49Zm73.61,101.3A38.86,38.86,0,1,1,167.1,139,39.49,39.49,0,0,1,127,177.79ZM189.42,38.67H63.77a9.76,9.76,0,0,0-10.44,9h0V68.9H200.86V48.07A10.71,10.71,0,0,0,189.42,38.67ZM102.54,61.26H60.88V46.12h41.66Zm72.29-1A8.44,8.44,0,0,1,166.25,52h0a8.58,8.58,0,1,1,8.85,8.31h-.31Z\"\n}));\n\nvar SvgLaundryA44098 = function SvgLaundryA44098(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"-10 -15 93 98.57\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLaundryA44098, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/laundry_A44098.59ec3d76.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from \"react\";\nimport CCFSearch from \"./CCFSearch\";\nimport OutreactAssetsSelector from \"./OutreachAssetSelector.js\";\nimport {ReactComponent as  Unclaimed}  from '../icons/laundry_484949.svg'\nimport {ReactComponent as Claimed}  from '../icons/laundry_A44098_alert.svg'\nimport {ReactComponent as Done}  from '../icons/laundry_A44098.svg'\n\n\nexport default function OutreactTab({ selectedCCF, onSelectedCCF, selectedOutreachTypes, onSelectOutreachTypes }) {\n\n    return (\n        <div className=\"outreach-tab\">\n            <h3>Outreach</h3>\n            <CCFSearch selected={selectedCCF} onSelected={onSelectedCCF} />\n            <h3>COVID-19 Community Assets</h3>\n            <div className='key' style={{display:'flex', justifyContent:'space-between', alignItems:'center'}}>\n                <Unclaimed style={{width:'50px', height:'50px'}}/>\n                <p>Unclaimed Asset</p>\n                <Claimed  style={{width:'50px', height:'50px'}}/>\n                <p>Outreach Pending</p>\n                <Done  style={{width:'50px', height:'50px'}}/>\n                <p>Outreach Compleated</p>\n            </div>\n            <p style={{textAlign:'left', fontWeight:700}}>A change from grey to a color signifies a CCF Grantee has commited to do census outreach at that location.</p>\n            <OutreactAssetsSelector\n                selected={selectedOutreachTypes}\n                onSelected={onSelectOutreachTypes}\n            />\n\n            <p style={{fontWeight:700}}>If you have or plan to do outreach to a business, click on it's icon and follow the link or click here:</p>\n            <a target='_blank' className='share-link' href='https://hstcensus2020.formstack.com/forms/cff_grantee_business_outreach_tracker'>\n                <button className='share-button'>Tell us about outreach efforts</button>\n            </a>\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport ContactTypeLegend from \"./ContactTypeLegend\";\nimport RangeLegend from \"./RangeLegend\";\nimport CategoryLegend from \"./CategoryLegend\";\nimport BoundarySelector from \"./BoundarySelector\";\nimport FacilitiesSelector from \"./FacilitiesSelector\";\nimport HelpTab from \"./HelpTab\";\nimport InfoTab from \"./InfoTab\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport OutreachTab from \"./OutreachTab\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faInfoCircle,\n    faLayerGroup,\n    faQuestionCircle,\n    faExclamationCircle,\n    faList\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\n\nexport default function Legend({\n    selectedBoundary,\n    boundaries,\n    onSelectBoundary,\n    showFacilities,\n    onShowFacilitiesChange,\n    selectedCCF, onSelectedCCF,\n    selectedOutreachTypes,\n    onSelectOutreachTypes,\n    tab,\n    onTabChanged,\n    onSelectMetric,\n    metric,\n    selectedFacilityTypes,\n    onSelectFacilityType,\n    onPrint,\n    showENRFU,\n    onToggleENRFU,\n    shareURL\n}) {\n\n\n    return (\n        <div className=\"Legend overlay\">\n            <div className=\"tabs\">\n                <div\n                    className={tab === \"layers\" ? \"selected\" : \"\"}\n                    onClick={() => onTabChanged(\"layers\")}\n                >\n                    <FontAwesomeIcon icon={faLayerGroup} />\n                </div>\n                <div\n                    className={tab === \"outreach\" ? \"selected\" : \"\"}\n                    onClick={() => onTabChanged(\"outreach\")}\n                >\n                    <FontAwesomeIcon\n                        style={{ color: \"red\" }}\n                        icon={faExclamationCircle}\n                    />\n                </div>\n                <div\n                    className={tab === \"info\" ? \"selected\" : \"\"}\n                    onClick={() => onTabChanged(\"info\")}\n                >\n                    <FontAwesomeIcon icon={faInfoCircle} />\n                </div>\n                <div\n                    className={tab === \"questions\" ? \"selected\" : \"\"}\n                    onClick={() => onTabChanged(\"questions\")}\n                >\n                    <FontAwesomeIcon icon={faQuestionCircle} />\n                </div>\n            </div>\n            <div className=\"content\">\n                {tab === \"layers\" && (\n                    <section className=\"thematic-layer\">\n                        <h3>LAYERS</h3>\n                        <h3>Neighborhood Information</h3>\n                        <Dropdown\n                            options={[\n                                {\n                                    value: \"responseRate\",\n                                    label: \"2020 Self Response Rate to date\"\n                                },\n                                {\n                                    value: \"strategy\",\n                                    label: \"2020 Census Mail Contact Stategies\"\n                                },\n                                {\n                                    value: \"returnCount\",\n                                    label: \"Hard to Count Populations(2010)\"\n                                },\n                                {\n                                    value: \"blackPop\",\n                                    label: \"Black Population (%)\"\n                                },\n                                {\n                                    value: \"latinxPop\",\n                                    label: \"Latinx Population (%)\"\n                                },\n                                {\n                                    value: \"asianPop\",\n                                    label: \"Asian Population (%)\"\n                                },\n                                {\n                                    value: \"whitePop\",\n                                    label: \"White Population (%)\"\n                                },\n                                {\n                                    value: \"otherPop\",\n                                    label: \"Other Population (%)\"\n                                },\n                                {\n                                    value: \"noInternetPC\",\n                                    label:\n                                        \"Population with No Internet Access (%)\"\n                                },\n                                {\n                                    value: \"englishProficency\",\n                                    label: \"Limited English Proficiency (%)\"\n                                },\n                                {\n                                    value: \"under5\",\n                                    label: \"Population Under 5 Years Old (%)\"\n                                }\n                            ]}\n                            onChange={a => onSelectMetric(a.value)}\n                            value={metric}\n                            placeholder=\"Select a metric\"\n                        />\n                        {metric === \"strategy\" && (\n                            <CategoryLegend\n                                categories={[\n                                    {\n                                        color: \"#C2A5CF\",\n                                        name: \"Internet First, English\",\n                                        sub:\n                                            \"Housing unit will receive letter to complete Census via online link, in English\"\n                                    },\n                                    {\n                                        color: \"#9970AB\",\n                                        name: \"Internet First, Bilingual\",\n                                        sub:\n                                            \"Housing unit will receive letter to complete Census via online link, in English and Spanish\"\n                                    },\n                                    {\n                                        color: \"#A6DBA0\",\n                                        name: \"Internet Choice, English\",\n                                        sub:\n                                            \"Housing unit will receive letter to complete Census via online link or paper survey, in English\"\n                                    },\n                                    {\n                                        color: \"#5AAE61\",\n                                        name: \"Internet Choice, Bilingual\",\n                                        sub:\n                                            \"Housing unit will receive letter to complete Census via online link or paper survey, in English and Spanish \"\n                                    }\n                                ]}\n                            />\n                        )}\n                        {metric === \"responseRate\" && (\n                            <RangeLegend\n                                name={\"Self Response Rate to date(%)\"}\n                                min={\"0%\"}\n                                max={\"70%\"}\n                                colStart={\"#FFFFFF\"}\n                                colEnd={\"#faaf12\"}\n                            />\n                        )}\n                        {metric === \"returnCount\" && (\n                            <CategoryLegend\n                                categories={[\n                                    { color: \"#b95356\", name: \"0 - 60%\" },\n                                    { color: \"#ee5658\", name: \"60 - 65%\" },\n                                    { color: \"#ecbaa8\", name: \"65 - 70%\" },\n                                    { color: \"#f9bd53\", name: \"70 - 73%\" },\n                                    {\n                                        color: \"rgba(0,0,0,0)\",\n                                        name: \"Not hard to count\"\n                                    }\n                                ]}\n                            />\n                        )}\n                        {metric === \"asianPop\" && (\n                            <RangeLegend\n                                name={\"Asian Population (%)\"}\n                                min={\"0%\"}\n                                max={\"100%\"}\n                                colStart={\"#FFFFFF\"}\n                                colEnd={\"#8f1158\"}\n                            />\n                        )}\n                        {metric === \"blackPop\" && (\n                            <RangeLegend\n                                name={\"Black Population (%)\"}\n                                min={\"0%\"}\n                                max={\"100%\"}\n                                colStart={\"#FFFFFF\"}\n                                colEnd={\"#b93f22\"}\n                            />\n                        )}\n                        {metric === \"latinxPop\" && (\n                            <RangeLegend\n                                name={\"Latinx Population (%)\"}\n                                min={\"0%\"}\n                                max={\"100%\"}\n                                colStart={\"#FFFFFF\"}\n                                colEnd={\"#cf0621\"}\n                            />\n                        )}\n                        {metric === \"whitePop\" && (\n                            <RangeLegend\n                                name={\"White Population (%)\"}\n                                min={\"0%\"}\n                                max={\"100%\"}\n                                colStart={\"#FFFFFF\"}\n                                colEnd={\"#faaf12\"}\n                            />\n                        )}\n                        {metric === \"otherPop\" && (\n                            <RangeLegend\n                                name={\"Other Population (%)\"}\n                                min={\"0%\"}\n                                max={\"20%\"}\n                                colStart={\"#FFFFFF\"}\n                                colEnd={\"#000000\"}\n                            />\n                        )}\n                        {metric === \"noInternetPC\" && (\n                            <RangeLegend\n                                name={\"% No Internet\"}\n                                min={\"0%\"}\n                                max={\"100%\"}\n                                colStart={\"#FFFFFF\"}\n                                colEnd={\"#faaf12\"}\n                            />\n                        )}\n                        {metric === \"englishProficency\" && (\n                            <RangeLegend\n                                name={\"% Proficent in English\"}\n                                min={\"0%\"}\n                                max={\"100%\"}\n                                colStart={\"#FFFFFF\"}\n                                colEnd={\"#faaf12\"}\n                            />\n                        )}\n                        {metric === \"under5\" && (\n                            <RangeLegend\n                                name={\"% under 5 years old\"}\n                                min={\"0%\"}\n                                max={\"10%\"}\n                                colStart={\"#FFFFFF\"}\n                                colEnd={\"#faaf12\"}\n                            />\n                        )}\n                        <BoundarySelector\n                            selectedBoundary={selectedBoundary}\n                            onSelect={onSelectBoundary}\n                            boundaries={boundaries}\n                        />\n                        <FacilitiesSelector\n                            selected={selectedFacilityTypes}\n                            onSelected={onSelectFacilityType}\n                        />\n                      \n                        <div className=\"share\">\n                            <h3>Share</h3>\n                            <div className=\"share-buttons\">\n                                <CopyToClipboard text={window.location}>\n                                    <button className=\"share-button\">\n                                        Copy Map Link\n                                    </button>\n                                </CopyToClipboard>\n\n                                <CopyToClipboard text={shareURL}>\n                                    <button className=\"share-button\">\n                                        Copy Current Map View\n                                    </button>\n                                </CopyToClipboard>\n                            </div>\n\n                            <div\n                                style={{\n                                    marginTop: \"20px\",\n                                    display: \"flex\",\n                                    justifyContent: \"space-around\"\n                                }}\n                            >\n                                <button\n                                    onClick={onPrint}\n                                    className=\"share-button\"\n                                    style={{ width: \"200px\" }}\n                                >\n                                    Print Map\n                                </button>\n                            </div>\n                        </div>\n                    </section>\n                )}\n                {tab === \"outreach\" && <OutreachTab \n                    selectedOutreachTypes={selectedOutreachTypes} \n                    onSelectOutreachTypes={onSelectOutreachTypes}\n                    selectedCCF={selectedCCF}\n                    onSelectedCCF={onSelectedCCF}\n                />}\n\n                {tab === \"info\" && <InfoTab />}\n                {tab === \"questions\" && <HelpTab />}\n            </div>\n        </div>\n    );\n}\n","export const colors = [\n    \"76C04B\",\n    \"8D1840\",\n    \"A44098\",\n    \"767FBE\",\n    \"41674F\",\n    \"FBA919\",\n    \"34499E\",\n    \"9D9A51\",\n    \"ED2024\",\n    \"FCC28E\",\n    \"E2E419\",\n    \"5F3092\",\n    \"865F94\",\n    \"5B8AAE\",\n    \"DD4297\",\n    \"B86328\"\n];\n","import React from \"react\";\nimport { colors } from \"../colors\";\nimport { PieChart, Pie, Sector, Cell } from \"recharts\";\n\nconst renderCustomizedLabel = ({\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    percent,\n    index\n}) => {\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n    if (percent < 4 / 100) {\n        return \"\";\n    }\n    return (\n        <text\n            x={x}\n            y={y}\n            fill=\"white\"\n            textAnchor={x > cx ? \"start\" : \"end\"}\n            dominantBaseline=\"central\"\n        >\n            {`${(percent * 100).toFixed(0)}%`}\n        </text>\n    );\n};\n\nconst RADIAN = Math.PI / 180;\nexport default function PieCard({ data, title }) {\n    const colData = data.map((d, i) => ({ ...d, color: colors[i % 5] }));\n    const width = 110;\n    const height = 110;\n    const buffer = 5;\n    return (\n        <div className=\"pie-card\">\n            <h2>{title}</h2>\n            <div className=\"pie-card-content\">\n                <PieChart\n                    width={width + buffer}\n                    height={height + buffer}\n                    data={colData}\n                >\n                    <Pie\n                        data={colData}\n                        cx={width / 2}\n                        cy={height / 2}\n                        labelLine={false}\n                        label={renderCustomizedLabel}\n                        outerRadius={width / 2}\n                        isAnimationActive={false}\n                        fill=\"#8884d8\"\n                    >\n                        {colData.map((entry, index) => (\n                            <Cell fill={entry.color} />\n                        ))}\n                    </Pie>\n                </PieChart>\n                <ul className=\"labels\">\n                    {colData.map((entry, index) => (\n                        <li className=\"label\">\n                            <span\n                                className=\"bar\"\n                                style={{ backgroundColor: colors[index] }}\n                            />\n                            <span className=\"label-text\">{entry.name}</span>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\n\nexport default function FactCard({ title, facts }) {\n    return (\n        <div className=\"fact\">\n            {facts.map(fact => (\n                <p className=\"fact-name\">\n                    <span className=\"fact-value\">\n                        {fact.value.toLocaleString()}\n                    </span>{\" \"}\n                    <span className=\"fact-text\">{fact.name}</span>\n                </p>\n            ))}\n        </div>\n    );\n}\n","import React from \"react\";\n\nexport default function AssetCategoryCard({ assets, title }) {\n    const icons = {\n        \"Hospitals and Rehab Centers\": \"Dot_Hospitals.png\",\n        \"Faith-Based Organizations\": \"Dot_FBO.png\",\n        \"City Wide Community Schools\": \"Dot_CommunitySchools.png\",\n        \"LGBTQ Centers and Services\": \"Dot_LGBTQ.png\",\n        \"Food Kitchens and Pantries\": \"Dot_FoodKitchens.png\",\n        \"Senior Centers\": \"Dot_SeniorCenters.png\",\n        \"Universal Pre-K\": \"Dot_UniPreK.png\",\n        \"K-12 (NYC Public Schools)\": \"Dot_K12.png\",\n        \"Community Schools\": \"Dot_CommunityCenters.png\",\n        \"Mental Health Services\": \"Dot_MentalHealth.png\",\n        \"Community-Based Organizations\": \"Dot_CBO.png\",\n        \"Public Libraries\": \"Dot_Libraries.png\",\n        \"Head Start and Early Head Start\": \"Dot_HeadStart.png\"\n    };\n\n    const width = Math.max(300, 300 * Math.ceil(assets.length / 3));\n    return (\n        <div className=\"asset-card\" style={{ width: width + \"px\" }}>\n            <h2>\n                <img src={`${process.env.PUBLIC_URL}/imgs/${icons[title]}`} />\n                {title}\n            </h2>\n            <ul style={{ width: width + \"px\" }}>\n                {assets.length == 0 && (\n                    <li key={`${title}-empty `}>\n                        <h3>None identified</h3>\n                    </li>\n                )}\n                {assets.map(asset => (\n                    <li key={asset.name} className=\"asset\">\n                        <h3>{asset.name}</h3>\n                        <p>\n                            {[\n                                asset.address,\n                                asset.boro,\n                                asset.city,\n                                asset.zipcode\n                            ].join(\",\")}\n                        </p>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n","import React from \"react\";\n\nexport default function DetailsSelector({ selected, onSelect }) {\n    const isSelected = name => (name === selected ? \"selected\" : \"\");\n    return (\n        <div className=\"details-selector\">\n            <ul>\n                <li\n                    onClick={() => onSelect(\"census2020\")}\n                    className={isSelected(\"census2020\")}\n                >\n                    Census 2020 Live Count\n                </li>\n                <li\n                    onClick={() => onSelect(\"demographics\")}\n                    className={isSelected(\"demographics\")}\n                >\n                    Demographics\n                </li>\n                <li\n                    onClick={() => onSelect(\"languages\")}\n                    className={isSelected(\"languages\")}\n                >\n                    Languages\n                </li>\n                <li\n                    onClick={() => onSelect(\"housing\")}\n                    className={isSelected(\"housing\")}\n                >\n                    Housing and Economics\n                </li>\n                <li\n                    onClick={() => onSelect(\"assets\")}\n                    className={isSelected(\"assets\")}\n                >\n                    Assets\n                </li>\n            </ul>\n        </div>\n    );\n}\n","import React from \"react\";\n\nexport default function ProgressBar({ pc }) {\n    return (\n        <div className=\"progressBar\">\n            <div className=\"outer\">\n                <div className=\"inner\" style={{ width: `${pc}%` }} />\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\n\nexport default function LanguageCard({ data }) {\n    const sorted_data = data\n        .sort((a, b) => (a.value < b.value ? 1 : -1))\n        .slice(0, 5);\n\n    /* const renames = {\n        speak_only_english: \"English\",\n        spanish: \"Spanish\",\n        \"french,_haitian,_or_cajun\": \"French Haitian or Cajun\",\n        german_or_other_west_germanic_languages: \"German or Germanic Language\",\n        \"russian,_polish,_or_other_slavic_languages\":\n            \"Russian, Polish or other Slavic\",\n        \"other_indo-european_languages\": \"Other Indo-European\",\n        korean: \"Korean\",\n        \"chinese_(incl._mandarin,_cantonese)\": \"Chinese (Madarin / Cantonese)\",\n        vietnamese: \"Vietnamese\",\n        \"tagalog_(incl._filipino)\": \"Tagalog (including Filipino)\",\n        other_asian_and_pacific_island_languages:\n            \"Other Asian and Pacific Island\"\n};*/\n    return (\n        <div className=\"language-card card\">\n            <h2>Top Household Languages</h2>\n\n            <ul>\n                {sorted_data.map(({ title, value }) => (\n                    <li className=\"language-entry\">\n                        <span>{title}</span>\n                        <span>{Math.floor(value)}%</span>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n","import React, { useState, useCallback } from \"react\";\nimport { RadialChart } from \"react-vis\";\nimport FacilityCard from \"./FacilityCard\";\nimport SimpleBarChart from \"./SimpleBarChart\";\nimport PieCard from \"./PieCard\";\nimport FactCard from \"./FactCard\";\nimport AssetCategoryCard from \"./AssetCategoryCard\";\nimport DetailsSelector from \"./DetailsSelector\";\nimport { useFilteredFacilities } from \"../hooks/useFacilities\";\nimport { saveAs } from \"file-saver\";\nimport ProgressBar from \"./ProgressBar\";\nimport LanguageCard from \"./LanguageCard\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDownload } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function Details({\n    feature,\n    onSelectFacility,\n    facilities,\n    layer,\n    tract,\n    facilityTypes\n}) {\n    const [showFacilities, setShowFacilities] = useState(false);\n    const [showBoundaryData, setShowBoundaryData] = useState(true);\n\n    const [selectedDetails, setSelectedDetails] = useState(\"census2020\");\n\n    const filteredFacilities = useFilteredFacilities(\n        facilities,\n        showBoundaryData\n            ? feature\n                ? feature.properties.geoid\n                : null\n            : tract\n            ? tract.properties.GEOID\n            : null,\n        showBoundaryData ? layer : \"tracts\",\n        facilityTypes\n    );\n\n    const makeRenting = feature => {\n        const properties = feature.properties;\n        return [\n            { name: \"Renters\", value: properties.own_vs_rent_rent },\n            { name: \"Owners\", value: properties.own_vs_rent_owner }\n        ];\n    };\n\n    const featureNames = {\n        tracts: \"Census Tract\",\n        cd: \"Community District\",\n        sd: \"School District\",\n        cc: \"City Council District\",\n        nat: \"Neighborhood Tablulation Area\",\n        NOCCs: \"NOCC\",\n        senate_districts: \"Senate District\",\n        police_precincts: \"Police Precinct\",\n        congress_districts: \"Congressional District\",\n        state_assembly_districts: \"State Assembly Districts\"\n    };\n\n    const featureName = featureNames[layer];\n    const displayFeature =\n        showBoundaryData && layer !== \"tracts\"\n            ? feature\n            : tract && {\n                  ...tract,\n                  properties: {\n                      ...tract.properties,\n                      geoid: tract.properties.GEOID\n                  }\n              };\n    console.log(\"DISPLAY FEATURE IS \", displayFeature);\n    const downloadAssets = useCallback(() => {\n        let csv = [\"name\", \"address\", \"type\"].join(\",\") + \"\\n\";\n        csv += filteredFacilities\n            .map(f => [f.name, f.address, f.asset_type].join(\",\"))\n            .join(\"\\n\");\n        var blob = new Blob([csv], { type: \"text/plain;charset=utf-8\" });\n        const boundaryType = showBoundaryData ? layer : \"tract\";\n        const boundaryId = displayFeature.id;\n        console.log(boundaryType, boundaryId, facilities, displayFeature);\n\n        saveAs(blob, `assets_for_${boundaryType}-${boundaryId}.csv`);\n    }, [filteredFacilities, displayFeature]);\n\n    const makeAgeData = feature => {\n        const properties = feature.properties;\n        const data = [\n            {\n                name: \"5 years or younger\",\n                value: properties.age_less_5\n            },\n            {\n                name: \"6 yrs - 15 yrs\",\n                value: properties.age_6_15\n            },\n            {\n                name: \"16 yrs - 64 yrs\",\n                value: properties.age_16_64\n            },\n            {\n                name: \"65 yrs or older\",\n                value: properties.age_64_over\n            }\n        ];\n        return data;\n    };\n    const makeForeignData = feature => {\n        const properties = feature.properties;\n        return [\n            { name: \"US Born\", value: properties.foreign_born_native },\n            { name: \"Foreign Born\", value: properties.foreign_born_foreign }\n        ];\n    };\n    const makeEnglishData = feature => {\n        const properties = feature.properties;\n\n        return [\n            //  { name: \"English\", value: properties.english_english },\n            { name: \"Asian Languages\", value: properties.english_asian },\n            { name: \"Spanish\", value: properties.english_spanish },\n            { name: \"European Languages\", value: properties.english_european },\n            { name: \"Other\", value: properties.english_other }\n        ];\n    };\n    const makeInternetData = feature => {\n        const properties = feature.properties;\n        const data = [\n            { name: \"No Internet\", value: properties.internet_no_access },\n            {\n                name: \"Full Subscription\",\n                value: properties.internet_subscription\n            },\n            {\n                name: \"Limited Subscription\",\n                value: properties.internet_no_subscription\n            }\n        ];\n        console.log(properties);\n        return data;\n    };\n    const contactStrategy = feature => {\n        switch (feature.strategy_code) {\n            case 0:\n                return \"Internet First, English\";\n            case 1:\n                return \"Internet First, Bilingual\";\n            case 2:\n                return \"Internet Choice, English\";\n            case 3:\n                return \"Internet Choice, Bilingual\";\n        }\n    };\n    const makeDemographicData = feature => {\n        return [\n            {\n                name: \"white\",\n                value:\n                    feature.properties.race_white /\n                    feature.properties.race_total\n            },\n            {\n                name: \"black\",\n                value:\n                    feature.properties.race_black /\n                    feature.properties.race_total\n            },\n            {\n                name: \"asian\",\n                value:\n                    feature.properties.race_asian /\n                    feature.properties.race_total\n            },\n            {\n                name: \"latinx\",\n                value:\n                    feature.properties.race_hispanic /\n                    feature.properties.race_total\n            },\n            {\n                name: \"other\",\n                value:\n                    feature.properties.race_other /\n                    feature.properties.race_total\n            }\n        ];\n    };\n    const makeLanguage = feature => {\n        const cols = [\n            \"Speak only English\",\n            \"Spanish\",\n            \"French (incl. Cajun)\",\n            \"Haitian\",\n            \"Italian\",\n            \"Portuguese\",\n            \"German\",\n            \"Yiddish, Pennsylvania Dutch or other West Germanic languages\",\n            \"Greek\",\n            \"Russian\",\n            \"Polish\",\n            \"Serbo-Croatian\",\n            \"Ukrainian or other Slavic languages\",\n            \"Armenian\",\n            \"Persian (incl. Farsi, Dari)\",\n            \"Gujarati\",\n            \"Hindi\",\n            \"Urdu\",\n            \"Punjabi\",\n            \"Bengali\",\n            \"Nepali, Marathi, or other Indic languages\",\n            \"Other Indo-European languages\",\n            \"Telugu\",\n            \"Tamil\",\n            \"Malayalam, Kannada, or other Dravidian languages\",\n            \"Chinese (incl. Mandarin, Cantonese)\",\n            \"Japanese\",\n            \"Korean\",\n            \"Hmong\",\n            \"Vietnamese\",\n            \"Khmer\",\n            \"Thai, Lao, or other Tai-Kadai languages\",\n            \"Other languages of Asia\",\n            \"Tagalog (incl. Filipino)\",\n            \"Ilocano, Samoan, Hawaiian, or other Austronesian languages\",\n            \"Arabic\",\n            \"Hebrew\",\n            \"Amharic, Somali, or other Afro-Asiatic languages\",\n            \"Yoruba, Twi, Igbo, or other languages of Western Africa\",\n            \"Swahili or other languages of Central, Eastern, and Southern Africa\",\n            \"Navajo\",\n            \"Other Native languages of North America\",\n            \"Other and unspecified languages\"\n\n            /*            \"speak_only_english\",\n            \"spanish\",\n            \"french,_haitian,_or_cajun\",\n            \"german_or_other_west_germanic_languages\",\n            \"russian,_polish,_or_other_slavic_languages\",\n            \"other_indo-european_languages\",\n            \"korean\",\n            \"chinese_(incl._mandarin,_cantonese)\",\n            \"vietnamese\",\n            \"tagalog_(incl._filipino)\",\n            \"other_asian_and_pacific_island_languages\"\n\n*/\n        ];\n        const data = cols.map(col => ({\n            value:\n                (feature.properties[col] * 100.0) /\n                feature.properties[\"language_total_pop\"],\n            title: col\n        }));\n        return data;\n    };\n\n    const makeLEP = feature => {\n        const cols = [\n            \"LEPHHs\",\n            \"LEPspanHHs\",\n            \"LEPindoeurHHs\",\n            \"LEPapacHHs\",\n            \"LEPotherHHs\"\n        ];\n        const data = cols.map(col => ({\n            value: feature.properties[col],\n            title: col\n        }));\n        return data;\n    };\n\n    return displayFeature ? (\n        <React.Fragment>\n            <div className=\"overview\">\n                <div className=\"boundary-type-selector\">\n                    {feature && (\n                        <div\n                            className={`boundary-type-selector-type ${\n                                showBoundaryData ? \"\" : \"selected\"\n                            }`}\n                            onClick={() => setShowBoundaryData(true)}\n                        >\n                            <h2 className={showBoundaryData ? \"\" : \"selected\"}>\n                                {featureName}:{\" \"}\n                                {featureName === \"NOCC\"\n                                    ? feature.properties.nocc_id\n                                    : feature.properties.geoid}{\" \"}\n                                {featureName === \"NOCC\"\n                                    ? feature.properties.neighborhood\n                                    : \"\"}\n                            </h2>\n                        </div>\n                    )}\n                    {tract && (\n                        <div\n                            className={`boundary-type-selector-type ${\n                                showBoundaryData ? \"selected\" : \"\"\n                            }`}\n                            onClick={() => setShowBoundaryData(false)}\n                        >\n                            <h2>Census Tract: {tract.properties.GEOID}</h2>\n                        </div>\n                    )}\n                </div>\n                <div className=\"top-stats\">\n                    {displayFeature && (\n                        <p>\n                            Population:{\" \"}\n                            <span style={{ color: \"red\" }}>\n                                {Math.floor(\n                                    displayFeature.properties.total_population\n                                ).toLocaleString()}\n                            </span>\n                        </p>\n                    )}\n                    {showBoundaryData && feature ? (\n                        <>\n                            <p>\n                                Population in HTC areas:{\" \"}\n                                <span style={{ color: \"red\" }}>\n                                    {Math.floor(\n                                        (feature.properties.htc_pop * 100.0) /\n                                            feature.properties.total_population\n                                    ).toLocaleString()}\n                                    %\n                                </span>\n                            </p>\n                        </>\n                    ) : (\n                        tract && (\n                            <>\n                                <p>\n                                    Mail return rate 2010:{\" \"}\n                                    <span style={{ color: \"red\" }}>\n                                        {tract.properties.MRR2010}%\n                                    </span>\n                                </p>\n                                <p>\n                                    2020 Census Mail Contact Strategy:{\" \"}\n                                    <span style={{ color: \"red\" }}>\n                                        {contactStrategy(tract.properties)}\n                                    </span>\n                                </p>\n                            </>\n                        )\n                    )}\n                    {selectedDetails === \"assets\" && (\n                        <p onClick={downloadAssets} className=\"download-assets\">\n                            <FontAwesomeIcon icon={faDownload} />\n                            Download Community Assets\n                        </p>\n                    )}\n                </div>\n            </div>\n            <div className=\"selector-cards\">\n                <DetailsSelector\n                    selected={selectedDetails}\n                    onSelect={detail => setSelectedDetails(detail)}\n                />\n                {displayFeature && (\n                    <div className=\"cards\">\n                        {selectedDetails === \"census2020\" && (\n                            <>\n                                <div className=\"card selfresponse\">\n                                    <h3>Self Response Rate</h3>\n                                    <p className=\"bigPC\">\n                                        {Math.floor(\n                                            displayFeature.properties.CRRALL\n                                        )}{\" \"}\n                                        %\n                                    </p>\n                                    <p>Last updated 8th April</p>\n                                </div>\n                                <div className=\"card comparison\">\n                                    <p>\n                                        <span\n                                            style={{\n                                                color: \"red\",\n                                                fontWeight: \"bold\"\n                                            }}\n                                        >\n                                            {Math.floor(\n                                                displayFeature.properties.CRRALL\n                                            )}\n                                            %{\" \"}\n                                        </span>{\" \"}\n                                        <span style={{ fontWeight: \"bold\" }}>\n                                            Self response rate as of 8th April\n                                            2020\n                                        </span>\n                                        <br />\n                                        24th day of counting\n                                    </p>\n                                    <ProgressBar\n                                        pc={displayFeature.properties.CRRALL}\n                                    />\n                                    <p>\n                                        <span\n                                            style={{\n                                                color: \"red\",\n                                                fontWeight: \"bold\"\n                                            }}\n                                        >\n                                            {Math.floor(\n                                                displayFeature.properties\n                                                    .HISTORIC_RESP_RATE\n                                            )}\n                                            %{\" \"}\n                                        </span>{\" \"}\n                                        <span style={{ fontWeight: \"bold\" }}>\n                                            Self response rate as of 7th April\n                                            2010\n                                        </span>\n                                        <br />\n                                        24th day of counting\n                                    </p>\n                                    <ProgressBar\n                                        pc={\n                                            displayFeature.properties\n                                                .HISTORIC_RESP_RATE\n                                        }\n                                    />\n                                    {!showBoundaryData && (\n                                        <>\n                                            <p>\n                                                <span>\n                                                    {Math.floor(\n                                                        displayFeature\n                                                            .properties.MRR2010\n                                                    )}\n                                                    %\n                                                </span>{\" \"}\n                                                Final self response rate in 2010\n                                                census\n                                            </p>\n                                            <ProgressBar\n                                                pc={\n                                                    displayFeature.properties\n                                                        .MRR2010\n                                                }\n                                            />\n                                        </>\n                                    )}\n                                </div>\n                            </>\n                        )}\n                        {selectedDetails === \"languages\" && (\n                            <>\n                                <div className=\"card english_proficency\">\n                                    <PieCard\n                                        title=\"Limited English Proficency\"\n                                        data={makeEnglishData(displayFeature)}\n                                        norm={true}\n                                    />\n                                    <FactCard\n                                        title={\"\"}\n                                        facts={[\n                                            {\n                                                name:\n                                                    \"% of housholds are bilingual\",\n                                                value: Math.floor(\n                                                    (displayFeature.properties\n                                                        .bilingual *\n                                                        100.0) /\n                                                        displayFeature\n                                                            .properties\n                                                            .english_total_households\n                                                )\n                                            },\n                                            {\n                                                name:\n                                                    \"% of housholds have limited english proficency\",\n                                                value: Math.floor(\n                                                    ((displayFeature.properties\n                                                        .english_total_households -\n                                                        displayFeature\n                                                            .properties\n                                                            .english_english) *\n                                                        100.0) /\n                                                        displayFeature\n                                                            .properties\n                                                            .english_total_households\n                                                )\n                                            }\n                                        ]}\n                                    />\n                                </div>\n\n                                <LanguageCard\n                                    data={makeLanguage(displayFeature)}\n                                />\n                            </>\n                        )}\n                        {selectedDetails === \"demographics\" && (\n                            <>\n                                <div className=\"card demographics\">\n                                    <PieCard\n                                        title=\"Race\"\n                                        data={makeDemographicData(\n                                            displayFeature\n                                        )}\n                                    />\n                                    <FactCard\n                                        title={\"\"}\n                                        facts={[\n                                            {\n                                                name: \"identify as Latinx\",\n                                                value:\n                                                    Math.floor(\n                                                        (displayFeature\n                                                            .properties\n                                                            .race_hispanic *\n                                                            100.0) /\n                                                            displayFeature\n                                                                .properties\n                                                                .race_total\n                                                    ).toLocaleString() + \"%\"\n                                            },\n                                            {\n                                                name: \"identify as Black\",\n                                                value:\n                                                    Math.floor(\n                                                        (displayFeature\n                                                            .properties\n                                                            .race_black *\n                                                            100.0) /\n                                                            displayFeature\n                                                                .properties\n                                                                .race_total\n                                                    ).toLocaleString() + \"%\"\n                                            }\n                                        ]}\n                                    />\n                                </div>\n                                <div className=\"card foreign\">\n                                    <PieCard\n                                        title=\"Foreign Born\"\n                                        data={makeForeignData(displayFeature)}\n                                    />\n                                </div>\n                                <div className=\"card age\">\n                                    <PieCard\n                                        title=\"Age\"\n                                        data={makeAgeData(displayFeature)}\n                                        norm={true}\n                                    />\n                                    <FactCard\n                                        title={\"\"}\n                                        facts={[\n                                            {\n                                                name:\n                                                    \"people under 5 years old\",\n                                                value: Math.floor(\n                                                    displayFeature.properties\n                                                        .age_less_5\n                                                ).toLocaleString()\n                                            }\n                                        ]}\n                                    />\n                                </div>\n                            </>\n                        )}\n                        {selectedDetails === \"housing\" && (\n                            <>\n                                <div className=\"card internet\">\n                                    <PieCard\n                                        title=\"Internet Access\"\n                                        data={makeInternetData(displayFeature)}\n                                        norm={true}\n                                        style={{ width: \"500px\" }}\n                                    />\n                                    <FactCard\n                                        facts={[\n                                            {\n                                                name:\n                                                    \"people have no internet access\",\n                                                value: Math.floor(\n                                                    displayFeature.properties\n                                                        .internet_no_access\n                                                ).toLocaleString()\n                                            }\n                                        ]}\n                                    />\n                                </div>\n                                <div className=\"card housing\">\n                                    <PieCard\n                                        title=\"Housing Tenure\"\n                                        data={makeRenting(displayFeature)}\n                                    />\n                                </div>\n                            </>\n                        )}\n                        {selectedDetails === \"assets\" && (\n                            <>\n                                {facilityTypes && facilityTypes.length > 0 ? (\n                                    facilityTypes.map(type => (\n                                        <AssetCategoryCard\n                                            title={type}\n                                            key={type}\n                                            assets={filteredFacilities.filter(\n                                                f => f.asset_type === type\n                                            )}\n                                        />\n                                    ))\n                                ) : (\n                                    <div className=\"asset-placeholder\">\n                                        <h2>\n                                            Turn on some Community Assets to\n                                            view here\n                                        </h2>\n                                    </div>\n                                )}\n                            </>\n                        )}\n                    </div>\n                )}\n            </div>\n        </React.Fragment>\n    ) : (\n        <div className=\"placeholder\">\n            <h2>Click {featureName} for details</h2>\n        </div>\n    );\n}\n","import React, { useEffect, useState, useMemo } from \"react\";\n\nexport default function useFacilities() {\n    const [facilities, setFacilities] = useState(null);\n    useEffect(() => {\n        fetch(`${process.env.PUBLIC_URL}/facilities.geojson`)\n            .then(a => a.json())\n            .then(a => setFacilities(a));\n    }, []);\n    return facilities;\n}\n\nexport function useFilteredFacilities(facilities, id, layer, types) {\n    console.log(\"filtering facilities by \", id, layer, types);\n    const layerIDs = {\n        cd: \"community_district_id\",\n        tracts: \"census_tract_id\",\n        cc: \"city_council_district_id\",\n        sd: \"school_district_id\",\n        nta: \"nta_id\",\n        police_precincts: \"precinct_id\",\n        congress_districts: \"cong_dist_id\",\n        senate_districts: \"st_sen_dist_id\",\n        NOCCs: \"noccs_id\"\n    };\n    return useMemo(() => {\n        return id\n            ? facilities.features\n                  .filter(\n                      facility => facility.properties[layerIDs[layer]] == id\n                  )\n                  .filter(facility =>\n                      types && types.length > 0\n                          ? types.includes(facility.properties.asset_type)\n                          : true\n                  )\n                  .map(f => f.properties)\n            : [];\n    }, [id, facilities, layer, types]);\n}\n","export const fillStyles = {\n    responseRate: [\n        \"interpolate-lab\",\n        [\"linear\"],\n        [\"get\", \"CRRALL\"],\n        0.0,\n        \"#FFFFFF\",\n        70.0,\n        \"#faaf12\"\n    ],\n    strategy: [\n        \"match\",\n        [\"get\", \"strategy_code\"],\n        0,\n        \"#C2A5CF\",\n        1,\n        \"#9970AB\",\n        2,\n        \"#A6DBA0\",\n        3,\n        \"#5AAE61\",\n        \"grey\"\n    ],\n    blackPop: [\n        \"interpolate-lab\",\n        [\"linear\"],\n        [\"/\", [\"get\", \"race_black\"], [\"get\", \"race_total\"]],\n        0.0,\n        \"#FFFFFF\",\n        1.0,\n        \"#b93f22\"\n    ],\n    asianPop: [\n        \"interpolate-lab\",\n        [\"linear\"],\n        [\"/\", [\"get\", \"race_asian\"], [\"get\", \"race_total\"]],\n        0.0,\n        \"#FFFFFF\",\n        1.0,\n        \"#8f1158\"\n    ],\n    latinxPop: [\n        \"interpolate-lab\",\n        [\"linear\"],\n        [\"/\", [\"get\", \"race_hispanic\"], [\"get\", \"race_total\"]],\n        0.0,\n        \"#FFFFFF\",\n        1.0,\n        \"#cf0621\"\n    ],\n    whitePop: [\n        \"interpolate-lab\",\n        [\"linear\"],\n        [\"/\", [\"get\", \"race_white\"], [\"get\", \"race_total\"]],\n        0.0,\n        \"#FFFFFF\",\n        1.0,\n        \"#faaf12\"\n    ],\n    otherPop: [\n        \"interpolate-lab\",\n        [\"linear\"],\n        [\"/\", [\"get\", \"race_other\"], [\"get\", \"race_total\"]],\n        0.0,\n        \"#FFFFFF\",\n        0.2,\n        \"#000000\"\n    ],\n    noInternetPC: [\n        \"interpolate-lab\",\n        [\"linear\"],\n        [\"/\", [\"get\", \"internet_no_access\"], [\"get\", \"internet_total\"]],\n        0.0,\n        \"#FFFFFF\",\n        1.0,\n        \"#faaf12\"\n    ],\n    englishProficency: [\n        \"interpolate-lab\",\n        [\"linear\"],\n        [\n            \"-\",\n            1,\n            [\n                \"/\",\n                [\"get\", \"english_english\"],\n                [\"get\", \"english_total_households\"]\n            ]\n        ],\n        0.0,\n        \"#FFFFFF\",\n        1.0,\n        \"#faaf12\"\n    ],\n    under5: [\n        \"interpolate-lab\",\n        [\"linear\"],\n        [\"/\", [\"get\", \"age_less_5\"], [\"get\", \"age_total\"]],\n        0.0,\n        \"#FFFFFF\",\n        0.1,\n        \"#faaf12\"\n    ],\n    returnCount: [\n        \"step\",\n        [\"get\", \"MRR2010\"],\n        \"#b95356\",\n        60,\n        \"#ee5658\",\n        65,\n        \"#ecbaa8\",\n        70,\n        \"#f9bd53\",\n        73,\n        [\"rgba\", 0, 0, 0, 0]\n    ]\n};\n\nexport default {\n    HTCLayer: {\n        //url: `${process.env.PUBLIC_URL}/CensusTractsAllVariables.geojson`,\n        url: `${process.env.PUBLIC_URL}/census_tracts.geojson`,\n        paintFill: {\n            \"fill-color\": \"grey\",\n            \"fill-opacity\": 0.7\n        },\n        paintLine: {\n            \"line-color\": [\n                \"case\",\n                [\n                    \"boolean\",\n                    [\"coalesce\", [\"feature-state\", \"selected\"], false],\n                    true\n                ],\n                \"red\",\n                \"white\"\n            ],\n            \"line-width\": [\n                \"case\",\n                [\n                    \"boolean\",\n                    [\"coalesce\", [\"feature-state\", \"selected\"], false],\n                    true\n                ],\n                3,\n                1\n            ]\n        }\n    },\n    EarlyNRFU: {\n        url: `${process.env.PUBLIC_URL}/boundaries/EarlyNRFULocations.geojson`,\n        paintFill: {\n            \"fill-color\": \"blue\",\n            \"fill-opacity\": 0.7\n        }\n    }\n};\n\nexport function BoundaryLayers() {\n    const layer_list = [\n        {\n            id: \"NOCCs\",\n            datasetName: \"NOCCS\",\n            polygons: \"noccs_with_vars.geojson\",\n            labels: \"noccs_labels.geojson\",\n            url:\n                \"http://data.cityofnewyork.us/api/geospatial/cpf4-rkhq?method=export&format=Shapefile\",\n            nameCol: \"ntaname\",\n            nameAlt: \"ntacode\"\n        },\n        {\n            id: \"sd\",\n            datasetName: \"School Districts\",\n            polygons: \"school_districts_with_vars.geojson\",\n            labels: \"school_district_labels.geojson\",\n            url:\n                \"http://data.cityofnewyork.us/api/geospatial/r8nu-ymqj?method=export&format=Shapefile\",\n            nameCol: \"district\",\n            nameAlt: \"districtco\"\n        },\n        {\n            id: \"police_precincts\",\n            datasetName: \"Police Precincts\",\n            polygons: \"police_precincts_with_vars.geojson\",\n            labels: \"police_precincts_labels.geojson\",\n            url:\n                \"http://data.cityofnewyork.us/api/geospatial/yusd-j4xi?method=export&format=Shapefile\",\n            nameCol: \"geoid\",\n            nameAlt: null\n        },\n        {\n            id: \"cd\",\n            datasetName: \"Community Districts\",\n            polygons: \"community_districts_vars.geojson\",\n            labels: \"communty_district_labels.geojson\",\n            url:\n                \"http://data.cityofnewyork.us/api/geospatial/yfnk-k7r4?method=export&format=Shapefile\",\n            nameCol: \"boro_cd\",\n            nameAlt: null\n        },\n        {\n            id: \"cc\",\n            datasetName: \"City Council Districts\",\n            polygons: \"city_council_district_with_vars.geojson\",\n            labels: \"city_council_district_labels.geojson\",\n            url:\n                \"http://data.cityofnewyork.us/api/geospatial/yusd-j4xi?method=export&format=Shapefile\",\n            nameCol: \"coun_dist\",\n            nameAlt: null\n        },\n        {\n            id: \"congress_districts\",\n            datasetName: \"Congressional Districts\",\n            polygons: \"congress_assembly_with_vars.geojson\",\n            labels: \"congress_assembly_district_labels.geojson\",\n            url:\n                \"http://data.cityofnewyork.us/api/geospatial/yusd-j4xi?method=export&format=Shapefile\",\n            nameCol: \"geoid\",\n            nameAlt: null\n        },\n\n        {\n            id: \"state_assembly_districts\",\n            datasetName: \"State Assembly Districts\",\n            polygons: \"state_assembly_districts_with_vars.geojson\",\n            labels: \"state_assembly_districts_labels.geojson\",\n            url:\n                \"http://data.cityofnewyork.us/api/geospatial/yusd-j4xi?method=export&format=Shapefile\",\n            nameCol: \"assem_dist\",\n            nameAlt: null\n        },\n        {\n            id: \"senate_districts\",\n            datasetName: \"Senate Districts\",\n            polygons: \"senate_districts_with_vars.geojson\",\n            labels: \"senate_districts_with_vars.geojson\",\n            url:\n                \"http://data.cityofnewyork.us/api/geospatial/yusd-j4xi?method=export&format=Shapefile\",\n            nameCol: \"st_sen_dist\",\n            nameAlt: null\n        }\n        /*{\n      id: 'pp',\n      datasetName: 'Police Precincts',\n      url:\n        'http://data.cityofnewyork.us/api/geospatial/78dh-3ptz?method=export&format=Shapefile',\n      nameCol: 'precinct',\n      nameAlt: null,\n    },\n    {\n      id: 'hc',\n      datasetName: 'Health Center Districts',\n      url:\n        'http://data.cityofnewyork.us/api/geospatial/b55q-34ps?method=export&format=Shapefile',\n      nameCol: 'hcent_dist',\n      nameAlt: null,\n    },\n    {\n      id: 'nycongress',\n      datasetName: 'Congressional Districts',\n      url:\n        'http://data.cityofnewyork.us/api/geospatial/qd3c-zuu7?method=export&format=Shapefile',\n      nameCol: 'cong_dist',\n      nameAlt: null,\n    },\n    {\n      id: 'sa',\n      datasetName: 'State Assembly Districts',\n      url:\n        'http://data.cityofnewyork.us/api/geospatial/pf5b-73bw?method=export&format=Shapefile',\n      nameCol: 'assem_dist',\n      nameAlt: null,\n    },\n    {\n      id: 'ss',\n      datasetName: 'State Senate Districts',\n      url:\n        'http://data.cityofnewyork.us/api/geospatial/h4i2-acfi?method=export&format=Shapefile',\n      nameCol: 'st_sen_dis',\n      nameAlt: null,\n    },\n    {\n      id: 'bid',\n      datasetName: 'Business Improvement District',\n      url:\n        'http://data.cityofnewyork.us/api/geospatial/ejxk-d93y?method=export&format=Shapefile',\n      nameCol: 'bid',\n      nameAlt: null,\n    },\n    /*{\n      id: 'zipcode',\n      datasetName: 'Zip Code',\n      url: 'http://data.cityofnewyork.us/download/i8iw-xf4u/application%2Fzip',\n      nameCol: 'ZIPCODE',\n      nameAlt: null,\n},*/\n    ];\n\n    return layer_list.map(layer => ({\n        ...layer,\n        paintLine: {\n            \"line-color\": \"black\"\n        }\n    }));\n}\n","import React, { useEffect } from \"react\";\nimport useFacilities from \"./useFacilities\";\n\nfunction loadAllImages(map) {\n    const images = [\n        \"Dot_Hospitals.png\",\n        \"Dot_FBO.png\",\n        \"Dot_CommunitySchools.png\",\n        \"Dot_LGBTQ.png\",\n        \"Dot_FoodKitchens.png\",\n        \"Dot_SeniorCenters.png\",\n        \"Dot_UniPreK.png\",\n        \"Dot_K12.png\",\n        \"Dot_CommunityCenters.png\",\n        \"Dot_MentalHealth.png\",\n        \"Dot_CBO.png\",\n        \"Dot_Libraries.png\"\n    ];\n    return Promise.all(\n        images.map(\n            img =>\n                new Promise((resolve, reject) => {\n                    map.loadImage(\n                        `${process.env.PUBLIC_URL}/imgs/${img}`,\n                        function(error, res) {\n                            map.addImage(img, res);\n                            resolve();\n                        }\n                    );\n                })\n        )\n    );\n}\n\nexport default function useFacilitiesLayer(map,facilities, visible, selectedTypes) {\n    const types = facilities\n        ? facilities.features.reduce((set, f) => {\n              set.add(f.properties.asset_type);\n              return set;\n          }, new Set())\n        : [];\n\n    useEffect(() => {\n        if (map.current && facilities) {\n            map.current.on(\"load\", () => {\n                loadAllImages(map.current).then(() => {\n                    types.forEach(type => {\n                        map.current.addLayer({\n                            id: `facilities: ${type}`,\n                            type: \"symbol\",\n                            source: {\n                                type: \"geojson\",\n                                data: {\n                                    ...facilities,\n                                    features: facilities.features.filter(\n                                        f => f.properties.asset_type === type\n                                    )\n                                }\n                            },\n\n                            layout: {\n                                \"icon-image\": [\"get\", \"icon\"],\n                                \"icon-size\": 0.02,\n                                \"text-field\": [\"get\", \"name\"],\n                                \"text-font\": [\n                                    \"Open Sans Semibold\",\n                                    \"Arial Unicode MS Bold\"\n                                ],\n                                \"text-offset\": [0, 0.6],\n                                \"text-size\": 13,\n                                \"text-anchor\": \"top\",\n                                //'icon-allow-overlap': true,\n                                //              'text-allow-overlap': true,\n                                visibility: selectedTypes.includes(type)\n                                    ? \"visible\"\n                                    : \"none\"\n                            },\n                            //    filter: ['match', ['get', 'asset_type'], types, true, false],\n\n                            paint: {\n                                \"text-color\": \"rgba(255,255,255,1)\",\n                                \"text-halo-color\": \"rgba(10, 10, 10, 0.8)\",\n                                \"text-halo-width\": 1,\n                                \"text-halo-blur\": 0\n                            }\n                        });\n                    });\n                });\n            });\n        }\n    }, [map, facilities]);\n\n    useEffect(() => {\n\n        const setVisibility = (shouldBeVisable)=>{\n            if (map.current && map.current.loaded()) {\n                types.forEach( type=>{\n                    map.current.setLayoutProperty(\n                        `facilities: ${type}`,\n                        \"visibility\",\n                        shouldBeVisable && selectedTypes.includes(type) ? \"visible\" : \"none\"\n                    );\n                    })\n            }\n            else{\n                setTimeout(()=>setVisibility(shouldBeVisable),200)\n            }\n        }\n        setVisibility(visible);\n       \n    }, [map, visible, types,selectedTypes]);\n\n    return facilities;\n}\n","\nimport React, { useEffect } from \"react\";\nimport useOutreachTargets from \"./useOutreachTargets\";\n\n\nconst name_fields = {\n    autorepairshops_nyc_geocoded: \"facility_name\",\n    bank_owned_atmlocations_nyc_geocodio: \"atm_name\",\n    bodegas_grocers_nyc: \"business_name\",\n    chain_grocerystores_nyc_geocoded: \"name\",\n    doe_schools_nyc: \"facname\",\n    dohmh_farmers_markets:\"market_name\",\n    foodkitchens_nyc: \"facname\",\n    homelessshelters_nyc:\"name\",\n    hospitalsandhealthclinics_nyc :\"facility_n\",\n    liquor_winestores_nyc_geocoded:'premise_name',\n    nyc_gas_station_locations_geoclient_enriched: \"station_name\",\n    post_offices:\"name\",\n    seniorservices_nyc_geocoded :\"program_name\",\n    laundromats_nyc: 'business_name'\n}\n\nconst type_map = {\n    autorepairshops_nyc_geocoded: \"repair_services\",\n    bank_owned_atmlocations_nyc_geocodio: \"financial_institutions\",\n    bodegas_grocers_nyc: \"food_and_supplies\",\n    chain_grocerystores_nyc_geocoded: \"food_and_supplies\",\n    doe_schools_nyc: \"education\",\n    dohmh_farmers_markets:\"food_and_supplies\",\n    foodkitchens_nyc: \"social_services\",\n    homelessshelters_nyc:\"social_services\",\n    hospitalsandhealthclinics_nyc :\"healthcare\",\n    liquor_winestores_nyc_geocoded:'food_and_supplies',\n    nyc_gas_station_locations_geoclient_enriched: \"misc\",\n    post_offices:\"social_services\",\n    seniorservices_nyc_geocoded :\"social_services\",\n    laundromats_nyc:'laundry'\n}\n\n\nconst colors=[\n        \"76C04B\",\n        \"8D1840\",\n        \"A44098\",\n        \"767FBE\",\n        \"41674F\",\n        \"FBA919\",\n        \"34499E\",\n        \"9D9A51\",\n        \"ED2024\",\n        \"FCC28E\",\n        \"E2E419\",\n        \"5F3092\",\n        \"865F94\",\n        \"5B8AAE\",\n        \"DD4297\",\n        \"B86328\"\n]\n\nconst unclaimedColor=  \"484949\"\n\nconst generateICON = (claimedBy,pending,type)=>{\n    return `${type_map[type]}_${claimedBy ? claimedBy : unclaimedColor}${pending ? '_alert' : ''}`\n}\nexport default function useOutreachLayer(map, outreachTragets, visible, selectedTypes, onClick) {\n    const types = Object.keys(outreachTragets)\n\n\n    useEffect(() => {\n        if (map.current && outreachTragets) {\n            map.current.on(\"load\", () => {\n                    types.forEach(type => {\n                        map.current.addLayer({\n                            id: `outreach: ${type}`,\n                            type: \"symbol\",\n                            source: {\n                                type: \"geojson\",\n                                data: outreachTragets[type]\n                            },\n                            layout: {\n                                \"icon-image\":generateICON(null,false, type), // [\"get\", \"icon\"],\n                                \"icon-size\": 0.4,\n                                \"text-field\": ['get',name_fields[type]],\n                                \"text-font\": [\n                                    \"Open Sans Semibold\",\n                                    \"Arial Unicode MS Bold\"\n                                ],\n                                \"text-offset\": [0, 2],\n                                \"text-size\": 13,\n                                \"text-anchor\": \"top\",\n                                //'icon-allow-overlap': true,\n                                //              'text-allow-overlap': true,\n                                // visibility: selectedTypes.includes(type)\n                                //     ? \"visible\"\n                                //     : \"none\"\n                                visibility: visible ? 'visible' :'none'\n                            },\n                            //    filter: ['match', ['get', 'asset_type'], types, true, false],\n\n                            paint: {\n                                \"text-color\": \"rgba(255,255,255,1)\",\n                                \"text-halo-color\": \"rgba(10, 10, 10, 0.8)\",\n                                \"text-halo-width\": 1,\n                                \"text-halo-blur\": 0\n                            }\n                        });\n                        map.current.on('click',  `outreach: ${type}`, (e)=>{\n                            if(e.features.length >0){\n                                const coordinates = e.features[0].geometry.coordinates.slice();\n                                const data = e.features[0].properties\n                                onClick({coordinates,data})\n                            }\n                        })\n                    });\n            });\n        }\n    }, [map, outreachTragets]);\n\n\n\n    useEffect(() => {\n\n        const setVisibility = (shouldBeVisable)=>{\n            if (map.current && map.current.loaded()) {\n                console.log(\"Toggling visible on facilities\");\n                console.log(\"CHANGING SELECTED TYPES \", selectedTypes)\n                types.forEach( type=>{\n                    map.current.setLayoutProperty(\n                        `outreach: ${type}`,\n                        \"visibility\",\n                        shouldBeVisable && selectedTypes.includes(type) ? 'visible' : 'none' \n                    );\n                    })\n            }\n            else{\n                console.log(\"waiting\")\n                setTimeout(()=>setVisibility(shouldBeVisable),200)\n            }\n        }\n        setVisibility(visible);\n       \n    }, [map, visible, selectedTypes,types]);\n\n}\n","import React from \"react\";\nimport {\n    Image,\n    Document,\n    Page,\n    Text,\n    View,\n    StyleSheet\n} from \"@react-pdf/renderer\";\n\n// Create styles\nconst styles = StyleSheet.create({\n    page: {\n        flexDirection: \"row\",\n        backgroundColor: \"white\"\n    },\n    section: {\n        margin: 0,\n        padding: 0,\n        flexGrow: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\"\n    }\n});\n\n// Create Document Component\nexport default function PDFDoc({ mapImage }) {\n    console.log(\"map image is \", mapImage);\n    const mapImageRatio = window.innerHeight / window.innerWidth;\n    const height = `${Math.floor(80 * mapImageRatio)}vw`;\n    return (\n        <Document>\n            <Page orientation=\"landscape\" size=\"A4\" style={styles.page}>\n                <View style={styles.section}>\n                    {mapImage && (\n                        <Image\n                            src={mapImage}\n                            style={{\n                                width: \"80vw\",\n                                height: height\n                            }}\n                            debugg={true}\n                        />\n                    )}\n                </View>\n            </Page>\n        </Document>\n    );\n}\n","import React from \"react\";\nimport {\n    PDFViewer,\n    Document,\n    Page,\n    Text,\n    View,\n    StyleSheet\n} from \"@react-pdf/renderer\";\nimport PDFDoc from \"./PDFDoc\";\n\nexport default function PrintDialog({ mapImage, onClose }) {\n    return (\n        <div className=\"print-dialog\">\n            <div className=\"inner\">\n                <PDFViewer style={{ width: \"100%\", flex: 1 }}>\n                    <PDFDoc mapImage={mapImage} />\n                </PDFViewer>\n                <div className=\"buttons\">\n                    <button onClick={onClose}>close</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React from 'react'\n\n\nexport function CCFDetails({selectedCCF}){\n    console.log(\"SELECTED CCF IS \", selectedCCF)\n    if(selectedCCF){\n        return <>\n            <div className=\"overview\">\n                <div className ='boundary-type-selector'>\n                    <div className=\"boundary-type-selector-type \">\n                        <h2 style={{boxSizing:'border-box', padding:'20px'}}>{selectedCCF.name}</h2>\n                    </div>\n                </div>\n            </div>\n            <div className='selector-cards'>\n                <div className='cards'>\n                    <div className='card CCFCard'>\n                        <h2>{selectedCCF.name} Outreach progress</h2>\n                        <p>No Community Assets Cliamed</p>\n                    </div>\n                </div>\n                <div className='cards'>\n                    <div className='card'>\n                        <h2>Asset Types</h2>\n                        <p>No Community Assets Claimed</p>\n                    </div> \n                </div>\n                <div className='cards'>\n                    <div className='card'>\n                        <h2>Borough Outreached</h2>\n                        <p>No Community Assets Cliamed</p>\n                    </div>\n                </div>\n            </div>\n        </>\n    }\n    else{\n       return( \n       <div className=\"placeholder\"> \n            <h2>Select a CCF to see details</h2>\n        </div>\n       )\n    }\n}","import React, { useRef, useState, useEffect, useCallback } from \"react\";\nimport { useMap } from \"../hooks/useMap\";\nimport Legend from \"../components/Legend\";\nimport Details from \"../components/Details\";\nimport Papa from \"papaparse\";\nimport * as turf from \"@turf/turf\";\nimport { useGeoJSONLayer } from \"../hooks/useGeoJSONLayer\";\nimport useBoundaryLayers from \"../hooks/useBoundaryLayers\";\nimport useFacilitiesLayer from \"../hooks/useFacilitiesLayer\";\nimport useOutreachTargets from \"../hooks/useOutreachTargets\";\nimport useOutreachLayers from '../hooks/useOutreachLayers'\nimport Layers, { fillStyles } from \"../Layers\";\nimport ReactGA from \"react-ga\";\nimport queryString from \"query-string\";\nimport PrintDialog from \"../components/PrintDialog\";\nimport { CCFDetails } from \"../components/CCFDetails\";\nimport useCCFAssignments from '../hooks/useCCFAssignments'\nimport useFacilities from \"../hooks/useFacilities\";\n\nexport default function MainPage() {\n    const mapDiv = useRef(null);\n    const [selectedBoundary, setSelectedBoundary] = useState(\"NOCCs\");\n    const [selectedTract, setSelectedTract] = useState(null);\n    const [selectedFeature, setSelectedFeature] = useState(null);\n    const [hardToCountStats, setHardToCountStats] = useState([]);\n    const [selectedCCF, setSelectedCCF] = useState(null)\n\n    const [popupFeature, setPopupFeature] = useState(null)\n\n    const [selectedFacilityTypes, setSelectedFacilityTypes] = useState([]);\n    const [selectedOutreachTypes, setSelectedOutreachTypes]= useState([]);\n    const [metric, setMetric] = useState(\"responseRate\");\n    const [showENRFU, setShowNRFU] = useState(false);\n    const [showPrintDialog, setShowPrintDialog] = useState(false);\n    const [showOutreach, setShowOutreach] = useState(false)\n    const [showFacilities, setShowFacilities] = useState(true);\n\n    const [mapImage, setMapImage] = useState(null);\n    const [tab, setTab] = useState(\"layers\");\n\n\n    useCCFAssignments()\n    const outreachTargets = useOutreachTargets();\n\n    useEffect(() => {\n        ReactGA.initialize(\"UA-159011122-1\");\n        ReactGA.pageview(window.location.pathname + window.location.search);\n    }, []);\n\n    useEffect(() => {\n        Papa.parse(\"/hard_to_count_NY.csv\", {\n            download: true,\n            header: true,\n            complete: function(results) {\n                setHardToCountStats(results);\n            }\n        });\n    }, []);\n\n    const onToggleFacilityType = types => {\n        let newList = [...selectedFacilityTypes];\n        types.forEach(type => {\n            if (newList.includes(type)) {\n                newList = newList.filter(t => t !== type);\n            } else {\n                newList = [...newList, type];\n            }\n        });\n        setSelectedFacilityTypes(newList);\n    };\n\n    const { map, zoomToBounds } = useMap(mapDiv, {\n        // lnglat: [-73.9625463540349, 40.67728661754935],\n        // zoom: 15,\n        lnglat: [-73.9920330193022, 40.75078660435196],\n        zoom: 10,\n        style: \"mapbox://styles/mapbox/light-v10\",\n        key:\n            \"pk.eyJ1Ijoic3R1YXJ0LWx5bm4iLCJhIjoiM2Q4ODllNmRkZDQ4Yzc3NTBhN2UyNDE0MWY2OTRiZWIifQ.8OEKvgZBCCtDFUXkjt66Pw\"\n    },popupFeature);\n\n    const tryToPrint = () => {\n        const canvas = document.getElementsByClassName(\"mapboxgl-canvas\")[0];\n        const imageURL = canvas.toDataURL(\"image/png\");\n        setMapImage(imageURL);\n        setShowPrintDialog(true);\n        /*  canvas.toBlob(blob => {\n                debugger;\n                setMapImage(blob);\n                setShowPrintDialog(true);\n            }, \"image/png\");\n*/\n    };\n\n    const toggleSelectedOutreachTypes = (types)=>{\n            let newList = [...selectedOutreachTypes];\n            types.forEach(type => {\n                if (newList.includes(type)) {\n                    newList = newList.filter(t => t !== type);\n                } else {\n                    newList = [...newList, type];\n                }\n            });\n            setSelectedOutreachTypes(newList);\n    }\n\n    useEffect(() => {\n        const params = queryString.parse(window.location.search);\n        if (params.layer) {\n            setSelectedBoundary(params.layer);\n        }\n        if (params.metric) {\n            setMetric(params.metric);\n        }\n        if (params.nrfu) {\n            setShowNRFU(params.nrfu === \"yes\");\n        }\n        if (params.boundaryID) {\n            const zoomToFeature = () => {\n                if (\n                    map.current &&\n                    map.current.isStyleLoaded &&\n                    map.current.getLayer(params.layer + \"-fill\") &&\n                    map.current.querySourceFeatures(params.layer + \"_source\")\n                        .length > 0\n                ) {\n                    const features = map.current.querySourceFeatures(\n                        params.layer + \"_source\"\n                    );\n                    const sf = features.find(\n                        f => f.id + \"\" === params.boundaryID\n                    );\n                    if (sf) {\n                        setSelectedFeature(sf);\n                        let bounds = turf.bbox(\n                            turf.buffer(sf, 1, { units: \"miles\" })\n                        );\n                        console.log(\"bounds \", bounds);\n                        map.current.fitBounds(bounds);\n                    }\n                } else {\n                    setTimeout(zoomToFeature, 500);\n                }\n            };\n            zoomToFeature();\n        }\n    }, [window.location.search]);\n\n    const searchBox = useRef(null);\n\n    useEffect(() => {\n        setSelectedFeature(null);\n    }, [selectedBoundary]);\n\n    const style = {\n        ...Layers.HTCLayer,\n        ...{\n            paintFill: { \"fill-color\": fillStyles[metric], \"fill-opacity\": 0.7 }\n        }\n    };\n\n\n    const setTractIfActive = useCallback( (tract)=>{ \n        if(tab==='layers'){ \n            setSelectedTract(tract)\n        }\n    },[tab])\n\n    const GeojsonLayer = useGeoJSONLayer(map, \"HTC\", {\n        ...style,\n        onClick: setTractIfActive,\n        selection: selectedTract,\n        visible: true\n    });\n\n    // const EarlyNRFULocations = useGeoJSONLayer(map, \"early_nrfu\", {\n    //     ...Layers.EarlyNRFU,\n    //     visible: showENRFU\n    // });\n\n    // BoundaryLayers().forEach(layer => {\n    const boundaryLayers = useBoundaryLayers(\n        map,\n        selectedBoundary,\n        null,\n        selectedBoundary,\n        selectedFeature ? selectedFeature.id : null,\n        boundary => {\n            setSelectedTract(null);\n            setSelectedFeature(boundary);\n        }\n    );\n\n    const facilities = useFacilities()\n\n    useFacilitiesLayer(\n        map,\n        facilities,\n        showFacilities,\n        selectedFacilityTypes\n    );\n\n    const outreach = useOutreachLayers(\n        map,\n        outreachTargets,\n        showOutreach,\n        selectedOutreachTypes,\n        setPopupFeature\n    )\n\n\n    useEffect(()=>{\n        if(tab==='layers'){\n            console.log(\"SWITCHING TO layers\")\n            setShowFacilities(true)\n            setShowOutreach(false)\n        }\n        if(tab ==='outreach'){\n            console.log(\"SWITCHING TO outreach\", )\n            setShowFacilities(false)\n            setShowOutreach(true)\n        }\n    },[tab])\n\n    let shareURL = `${window.location.origin}${process.env.PUBLIC_URL}?layer=${selectedBoundary}&metric=${metric}`;\n    if (selectedFeature) {\n        shareURL += `&boundaryID=${selectedFeature.id}`;\n    }\n    return (\n        <div className=\"main-page\">\n            <div className=\"map\" ref={mapDiv} />\n            <div className=\"info overlay\">\n                <h2>NYC CENSUS 2020 INTERACTIVE MAP</h2>\n                <p>\n                    This map is a tool to identify community-based assets, learn\n                    about historically undercounted communities, and visualize\n                    geographically relevant Census data for 2020 Census efforts.\n                </p>\n                <p>\n                    If you are creating an outreach strategy to get your\n                    neighborhood counted, this tool can help! For more\n                    information about the map and how to submit data for your\n                    neighborhood click on the \"?\" below.\n                </p>\n                <div ref={searchBox} />\n            </div>\n            <div className=\"details overlay\">\n                {tab==='layers' ? \n                    <Details\n                        feature={selectedFeature}\n                        tract={selectedTract}\n                        layer={selectedBoundary}\n                        facilityTypes={selectedFacilityTypes}\n                        facilities={facilities}\n                        tab={tab} />\n                    :\n                    <CCFDetails selectedCCF={selectedCCF}/>\n                }\n            </div>\n            <Legend\n                boundaries={boundaryLayers}\n                selectedBoundary={selectedBoundary}\n                onSelectBoundary={setSelectedBoundary}\n                showFacilities={showFacilities}\n                onShowFacilitiesChange={setShowFacilities}\n                selectedFacilityTypes={selectedFacilityTypes}\n                onSelectFacilityType={onToggleFacilityType}\n                selectedCCF= {selectedCCF}\n                onSelectedCCF={setSelectedCCF}\n                selectedOutreachTypes={selectedOutreachTypes}\n                onSelectOutreachTypes={toggleSelectedOutreachTypes}\n                metric={metric}\n                onSelectMetric={setMetric}\n                showENRFU={showENRFU}\n                onToggleENRFU={setShowNRFU}\n                shareURL={shareURL}\n                onPrint={tryToPrint}\n                tab = {tab}\n                onTabChanged = {setTab}\n            />\n            {showPrintDialog && (\n                <PrintDialog\n                    mapImage={mapImage}\n                    onClose={() => setShowPrintDialog(false)}\n                />\n            )}\n        </div>\n    );\n}\n","import {useEffect, useState} from 'react'\nimport Papa from 'papaparse'\n\nexport default function useCCFAssigments(){\n\n    const [mapping, setMappings] = useState([])\n    useEffect(()=>{\n        Papa.parse('https://docs.google.com/spreadsheets/d/e/2PACX-1vSa1xobVkjf1SwHahluf5e_hxMQEj733XLGf5xj-bH6-2X-IpB3jHZ7XGnqFWABsRMtepFmY3psxF98/pub?gid=0&single=true&output=csv',{\n            download:true,\n            header:true,\n            complete:(results=>setMappings( results.data))\n        })\n    },[])\n    return mapping\n}","import { useState, useEffect } from \"react\";\n\nexport default function useOutreachTargets() {\n    const [targets, setTargets] = useState([]);\n    const targetTableList = [\n        \"autorepairshops_nyc_geocoded\",\n        \"bank_owned_atmlocations_nyc_geocodio\",     \n        \"bodegas_grocers_nyc\",\n        \"chain_grocerystores_nyc_geocoded\",\n        \"doe_schools_nyc\",\n        \"dohmh_farmers_markets\",\n        \"foodkitchens_nyc\",\n        \"homelessshelters_nyc\",\n        \"hospitalsandhealthclinics_nyc\",\n        \"laundromats_nyc\",\n        \"liquor_winestores_nyc_geocoded\",\n        \"nyc_gas_station_locations_geoclient_enriched\",\n        \"post_offices\",\n        \"seniorservices_nyc_geocoded\"\n    ];\n\n    useEffect(() => {\n        Promise.all(\n            targetTableList.map(t =>\n                fetch(\n                    `https://hesterst.carto.com/api/v2/sql?filename=post_office&q=select+*+from+public.${t}&format=geojson&bounds=&api_key=2QqDs_ZDTqDeIQ3xFFFixw`\n                )\n                    .then(r => r.json())\n                    .then(a => ({\n                        ...a,\n                        features: a.features.map(f => ({\n                            ...f,\n                            properties: { ...f.properties, type: t }\n                        }))\n                    }))\n            )\n        ).then(all_features => {\n            const reducedTargets = all_features.reduce((r,a,i)=> ({...r, [targetTableList[i]] : a}) , {});\n            setTargets(reducedTargets);\n        });\n    }, []);\n    return targets;\n}\n","import { useState, useRef, useEffect, useCallback } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport MapboxGeocoder from \"@mapbox/mapbox-gl-geocoder\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport \"@mapbox/mapbox-gl-geocoder/lib/mapbox-gl-geocoder.css\";\nimport style from \"../map_style\";\n\nexport function useMap(mapDivRef, { lnglat, zoom, key }, popupFeature) {\n    const [mapLoaded, setMapLoaded] = useState(false);\n    mapboxgl.accessToken = key;\n    const map = useRef(null);\n    const popup =  useRef(null)\n    const spriteURL =  `${process.env.PUBLIC_URL ? process.env.PUBLIC_URL+\"/\" : window.location.href}outreach_icons/sp`\n    useEffect(() => {\n        map.current = new mapboxgl.Map({\n            container: mapDivRef.current, // container id\n            style: {...style, sprite:spriteURL}, // stylesheet location\n            center: lnglat, // starting position [lng, lat]\n            zoom: zoom, // starting zoom,\n            preserveDrawingBuffer: true,\n            // sprite:\"/outreach_icons/sp\"\n\n        });\n        map.current.addControl(\n            new MapboxGeocoder({\n                accessToken: mapboxgl.accessToken,\n                mapboxgl: mapboxgl\n            })\n        );\n        map.current.addControl(new mapboxgl.ScaleControl(), \"top-right\");\n        map.current.addControl(new mapboxgl.NavigationControl());\n        window.map = map;\n    }, [mapDivRef]);\n\n\n    useEffect(()=>{\n        if(popupFeature){\n            console.log('popup feature ', popupFeature)\n            popup.current= new mapboxgl.Popup({ offset: 25 })\n            .setLngLat(popupFeature.coordinates)\n            .setHTML(`\n                <h3 style=\"margin-bottom:10px\">If you have or plan to do outreach to this business, click <a target=\"_blank\" href=\"https://hstcensus2020.formstack.com/forms/cff_grantee_business_outreach_tracker\">here!</a></h3>\n                <h2>Buisness ID: ${popupFeature.data.unique_id}</h2>\n             `)\n            .addTo(map.current);\n        }\n        else{\n            if(popup.current){\n                popup.current.remove()\n                popup.current=null\n            }\n        }\n    },[popupFeature])\n\n    const zoomToBounds = bounds => {\n        if (map.current) {\n            map.current.fitBounds([\n                [32.958984, -5.353521],\n                [43.50585, 5.615985]\n            ]);\n        }\n    };\n\n    return { map, zoomToBounds };\n}\n","import { useEffect, useRef } from \"react\";\n\nexport function useGeoJSONLayer(\n    map,\n    name,\n    { url, paintFill, paintLine, sourceLayer, onClick, selection, visible }\n) {\n    const fillLayer = useRef(null);\n    const lineLayer = useRef(null);\n    const source = useRef(null);\n    const source_name = `${name}_source`;\n    const oldSelectionID = useRef(null);\n    const metricChangeTimeout = useRef(null);\n    const visibilityChangeTimeout = useRef(null);\n\n    useEffect(() => {\n        if (map.current) {\n            map.current.on(\"load\", () => {\n                source.current = map.current.addSource(source_name, {\n                    type: \"geojson\",\n                    data: url\n                });\n\n                if (paintFill) {\n                    fillLayer.current = map.current.addLayer({\n                        id: `${name}-fill`,\n                        type: \"fill\",\n                        source: source_name,\n                        paint: paintFill,\n                        layout: {\n                            visibility: visible ? \"visible\" : \"none\"\n                        }\n                    });\n                }\n                if (paintLine) {\n                    lineLayer.current = map.current.addLayer({\n                        id: `${name}-line`,\n                        type: \"line\",\n                        source: source_name,\n                        paint: paintLine,\n                        layout: {\n                            visibility: visible ? \"visible\" : \"none\"\n                        }\n                    });\n                }\n                map.current.on(\"click\", `${name}-fill`, e => {\n                    console.log(e.features[0]);\n                    if (onClick) {\n                        onClick(e.features[0]);\n                    }\n                });\n            });\n        }\n    }, [map]);\n\n    useEffect(() => {\n        if (map.current && selection) {\n            if (oldSelectionID.current) {\n                map.current.setFeatureState(\n                    { source: source_name, id: oldSelectionID.current },\n                    { selected: false }\n                );\n            }\n\n            map.current.setFeatureState(\n                { source: source_name, id: selection.id },\n                { selected: true }\n            );\n            oldSelectionID.current = selection.id;\n        }\n    }, [selection]);\n\n    useEffect(() => {\n        if (map.current) {\n            const setVisibility = () => {\n                if (map.current.loaded()) {\n                    map.current.setLayoutProperty(\n                        `early_nrfu-fill`,\n                        \"visibility\",\n                        visible ? \"visible\" : \"none\"\n                    );\n                    map.current.setLayoutProperty(\n                        `early_nrfu-line`,\n                        \"visibility\",\n                        visible ? \"visible\" : \"none\"\n                    );\n                } else {\n                    if (visibilityChangeTimeout.current) {\n                        clearTimeout(visibilityChangeTimeout.current);\n                        visibilityChangeTimeout.current = null;\n                    }\n                    visibilityChangeTimeout.current = setTimeout(\n                        setVisibility,\n                        200\n                    );\n                }\n            };\n            setVisibility();\n        }\n    }, [map, visible]);\n\n    useEffect(() => {\n        if (map.current) {\n            const setPaint = () => {\n                if (map.current.loaded()) {\n                    map.current.setPaintProperty(\n                        `${name}-fill`,\n                        \"fill-color\",\n                        paintFill[\"fill-color\"]\n                    );\n                } else {\n                    if (metricChangeTimeout.current) {\n                        clearTimeout(metricChangeTimeout.current);\n                        metricChangeTimeout.current = null;\n                    }\n                    metricChangeTimeout.current = setTimeout(setPaint, 500);\n                }\n            };\n            setPaint();\n        }\n    }, [paintFill]);\n    return { fillLayer, source };\n}\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { BoundaryLayers } from \"../Layers\";\n\nexport default function useBoundaryLayers(\n    map,\n    selectedLayer,\n    selectedVar,\n    onSelectLayer,\n    selectedGeomID,\n    onClick\n) {\n    const [layers, setLayers] = useState({});\n    const oldSelectionID = useRef(null);\n    const boundaryLayerChangeTimeout = useRef(null);\n\n    useEffect(() => {\n        if (map.current) {\n            let layerList = {};\n            map.current.on(\"load\", () => {\n                const boundaryLayers = BoundaryLayers();\n                boundaryLayers.forEach(layer => {\n                    const sourceName = `${layer.id}_source`;\n\n                    let layerDeets = { ...layer };\n                    layerDeets.source = map.current.addSource(sourceName, {\n                        type: \"geojson\",\n                        data: `${process.env.PUBLIC_URL}/boundaries/${layer.polygons}`\n                    });\n\n                    layerDeets.sourceLabels = map.current.addSource(\n                        sourceName + \"_labels\",\n                        {\n                            type: \"geojson\",\n                            data: `${process.env.PUBLIC_URL}/boundaries/${layer.labels}`\n                        }\n                    );\n\n                    layerDeets.fillLayer = map.current.addLayer({\n                        id: `${layer.id}-fill`,\n                        type: \"fill\",\n                        source: sourceName,\n                        paint: {\n                            \"fill-color\": \"grey\",\n                            \"fill-opacity\": [\n                                \"case\",\n                                [\n                                    \"boolean\",\n                                    [\n                                        \"coalesce\",\n                                        [\"feature-state\", \"selected\"],\n                                        false\n                                    ],\n                                    true\n                                ],\n                                0,\n                                0.2\n                            ]\n                        },\n                        layout: {\n                            visibility:\n                                selectedLayer == layer.id ? \"visible\" : \"none\"\n                        }\n                    });\n\n                    if (layer.paintLine) {\n                        layerDeets.lineLayer = map.current.addLayer({\n                            id: `${layer.id}-line`,\n                            type: \"line\",\n                            source: sourceName,\n                            paint: {\n                                \"line-color\": [\n                                    \"case\",\n                                    [\n                                        \"boolean\",\n                                        [\n                                            \"coalesce\",\n                                            [\"feature-state\", \"selected\"],\n                                            false\n                                        ],\n                                        true\n                                    ],\n                                    \"red\",\n                                    \"black\"\n                                ],\n\n                                \"line-width\": [\n                                    \"case\",\n                                    [\n                                        \"boolean\",\n                                        [\n                                            \"coalesce\",\n                                            [\"feature-state\", \"selected\"],\n                                            false\n                                        ],\n                                        true\n                                    ],\n                                    4,\n                                    1\n                                ]\n                            },\n                            layout: {\n                                visibility:\n                                    selectedLayer == layer.id\n                                        ? \"visible\"\n                                        : \"none\"\n                            }\n                        });\n                    }\n\n                    layerDeets.labelLayer = map.current.addLayer({\n                        id: `${layer.id}-labels`,\n                        type: \"symbol\",\n                        source: sourceName + \"_labels\",\n                        layout: {\n                            visibility:\n                                selectedLayer == layer.id ? \"visible\" : \"none\",\n                            \"text-field\": [\"get\", \"geoid\"],\n                            \"text-font\": [\n                                \"Open Sans Semibold\",\n                                \"Arial Unicode MS Bold\"\n                            ],\n                            \"text-offset\": [0, 0.0],\n                            \"text-size\": 15,\n                            \"text-anchor\": \"top\",\n                            \"text-allow-overlap\": false\n                        }\n                    });\n                    layerList[layer.id] = layerDeets;\n                });\n                setLayers(layerList);\n            });\n        }\n    }, [map]);\n\n    useEffect(() => {\n        if (map.current) {\n            const updateVisibility = () => {\n                console.log(\"SELECTED LAYER IS \", selectedLayer);\n                if (\n                    map.current.isStyleLoaded() &&\n                    (map.current.getLayer(selectedLayer + \"-fill\") ||\n                        selectedLayer === \"tracts\")\n                ) {\n                    console.log(\n                        \"Actually changing layers \",\n                        selectedLayer,\n                        layers\n                    );\n                    Object.entries(layers).forEach(([id, layer]) => {\n                        console.log(\"comparing \", id, selectedLayer);\n                        map.current.setFeatureState(\n                            {\n                                source: layer.id + \"_source\",\n                                id: oldSelectionID.current\n                            },\n                            { selected: false }\n                        );\n                        map.current.setLayoutProperty(\n                            `${layer.id}-line`,\n                            \"visibility\",\n                            id == selectedLayer ? \"visible\" : \"none\"\n                        );\n                        map.current.setLayoutProperty(\n                            `${layer.id}-labels`,\n                            \"visibility\",\n                            id == selectedLayer ? \"visible\" : \"none\"\n                        );\n                        map.current.setLayoutProperty(\n                            `${layer.id}-fill`,\n                            \"visibility\",\n                            id == selectedLayer ? \"visible\" : \"none\"\n                        );\n                    });\n                } else {\n                    if (boundaryLayerChangeTimeout.current) {\n                        clearTimeout(boundaryLayerChangeTimeout.current);\n                        boundaryLayerChangeTimeout.current = null;\n                    }\n                    boundaryLayerChangeTimeout.current = setTimeout(\n                        updateVisibility,\n                        500\n                    );\n                }\n            };\n            updateVisibility();\n        }\n    }, [map, selectedLayer, layers]);\n\n    useEffect(() => {\n        const source_name = `${selectedLayer}_source`;\n\n        if (map.current && selectedGeomID) {\n            if (oldSelectionID.current) {\n                map.current.setFeatureState(\n                    { source: source_name, id: oldSelectionID.current },\n                    { selected: false }\n                );\n            }\n\n            map.current.setFeatureState(\n                { source: source_name, id: selectedGeomID },\n                { selected: true }\n            );\n            oldSelectionID.current = selectedGeomID;\n        }\n    }, [selectedGeomID, selectedLayer, map]);\n\n    useEffect(() => {\n        if (map.current) {\n            const boundaryLayers = BoundaryLayers();\n            boundaryLayers.forEach(layer => {\n                map.current.on(\"click\", `${layer.id}-fill`, e => {\n                    if (onClick) {\n                        onClick(e.features[0], layer.id);\n                    }\n                });\n            });\n        }\n    }, [map]);\n    return layers;\n}\n","import React from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport MainPage from './pages/MainPage';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <Route path=\"/\" component={MainPage} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}